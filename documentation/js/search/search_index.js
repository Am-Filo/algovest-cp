var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.068,1,1.182]],["body/components/AppComponent.html",[0,0.904,1,1.179,2,1.189,3,0.127,4,0.108,5,0.798,6,1.129,7,0.798,8,0.798,9,0.108,10,0.93,11,0.408,12,1.53,13,1.817,14,0.85,15,1.918,16,2.5,17,1.356,18,1.918,19,0.217,20,0.566,21,1.949,22,4,23,2.5,24,3.302,25,3.302,26,3.151,27,2.5,28,3.302,29,3.302,30,4.859,31,2.5,32,2.5,33,2.5,34,2.955,35,2.5,36,2.5,37,3.302,38,0.368,39,1.119,40,2.947,41,2.947,42,1.918,43,3.934,44,2.947,45,2.947,46,2.947,47,3.578,48,1.918,49,0.408,50,1.129,51,2.047,52,2.373,53,3.827,54,1.886,55,3.302,56,1.036,57,1.129,58,0.566,59,0.041,60,0.652,61,1.061,62,0.566,63,1.918,64,1.129,65,2.5,66,2.955,67,3.302,68,4.164,69,2.947,70,0.63,71,1.653,72,1.129,73,1.579,74,2.603,75,2.5,76,1.918,77,1.316,78,5.684,79,1.129,80,1.918,81,2.718,82,1.918,83,1.129,84,3.151,85,2.955,86,1.918,87,1.129,88,3.302,89,2.718,90,3.302,91,1.129,92,2.426,93,2.5,94,1.129,95,2.5,96,1.918,97,1.918,98,1.129,99,1.918,100,1.918,101,1.129,102,2.058,103,2.5,104,2.947,105,1.129,106,1.129,107,2.393,108,1.658,109,1.622,110,1.129,111,0.566,112,1.129,113,2.947,114,1.918,115,1.918,116,1.918,117,1.918,118,1.918,119,1.918,120,1.918,121,1.918,122,1.918,123,1.918,124,1.918,125,1.918,126,1.918,127,1.918,128,1.918,129,1.918,130,1.918,131,1.918,132,1.918,133,1.918,134,1.918,135,1.918,136,1.129,137,2.078,138,1.129,139,1.129,140,1.129,141,1.179,142,1.129,143,3.302,144,0.511,145,1.129,146,1.129,147,1.129,148,2.718,149,1.129,150,1.129,151,1.129,152,1.129,153,0.431,154,0.127,155,0.7,156,0.85,157,0.93,158,1.056,159,0.93,160,0.85,161,0.93,162,0.93,163,1.129,164,0.93,165,1.129,166,0.127,167,0.071,168,0.408,169,2.5,170,1.129,171,1.129,172,1.129,173,1.129,174,1.55,175,1.129,176,0.7,177,1.129,178,1.129,179,1.129,180,0.93,181,1.129,182,2.5,183,1.129,184,0.93,185,1.918,186,1.356,187,1.918,188,3.457,189,3.316,190,1.129,191,1.129,192,1.129,193,1.129,194,0.93,195,1.129,196,1.129,197,1.129,198,0.93,199,0.93,200,2.5,201,1.129,202,1.918,203,1.129,204,0.452,205,1.827,206,1.579,207,1.918,208,1.129,209,2.947,210,1.129,211,1.129,212,1.129,213,1.129,214,1.129,215,1.129,216,0.93,217,1.767,218,1.129,219,1.129,220,0.93,221,1.129,222,1.579,223,1.886,224,1.129,225,0.7,226,1.129,227,1.579,228,1.129,229,1.056,230,1.129,231,1.129,232,1.129,233,1.579,234,0.93,235,0.93,236,1.129,237,1.129,238,0.556,239,1.129,240,1.129,241,0.7,242,1.129,243,1.129,244,1.129,245,1.129,246,0.408,247,1.129,248,1.056,249,0.93,250,2.083,251,1.129,252,3.302,253,1.129,254,0.93,255,2.718,256,1.129,257,1.129,258,1.129,259,0.93,260,1.129,261,2.947,262,3.316,263,4.251,264,1.579,265,1.918,266,2.955,267,1.918,268,1.571,269,2.947,270,1.918,271,1.918,272,1.918,273,1.918,274,2.955,275,1.918,276,1.918,277,1.918,278,1.918,279,1.918,280,1.579,281,1.918,282,2.947,283,1.579,284,1.918,285,1.918,286,1.918,287,1.189,288,1.918,289,1.129,290,3.589,291,1.356,292,2.947,293,1.918,294,1.918,295,1.918,296,1.918,297,1.918,298,1.918,299,2.947,300,1.918,301,0.622,302,1.189,303,0.334,304,2.083,305,0.798,306,1.129,307,0.798,308,0.798,309,0.798,310,0.556,311,0.334,312,0.798,313,0.556,314,0.7,315,0.798,316,0.007,317,0.012,318,0.007]],["title/injectables/AppConfig.html",[319,0.709,320,1.068]],["body/injectables/AppConfig.html",[3,0.463,4,0.392,9,0.392,19,0.79,20,1.475,21,1.904,38,0.959,49,1.944,56,1.074,58,0.79,59,0.04,60,0.701,61,1.074,62,0.79,70,0.749,74,3.096,107,2.264,108,1.214,153,0.463,154,0.463,166,0.463,167,0.259,316,0.027,317,0.032,318,0.027,319,1.198,320,1.805,321,2.026,322,3.386,323,2.384,324,5.595,325,4.995,326,4.995,327,4.113,328,4.995,329,4.113,330,0.885,331,4.995]],["title/modules/AppModule.html",[332,1.833,333,1.833]],["body/modules/AppModule.html",[1,2.333,3,0.344,4,0.291,9,0.291,13,1.683,52,2.56,59,0.04,141,1.223,144,0.815,153,0.668,154,0.344,155,1.896,156,2.483,157,2.518,158,1.683,159,2.518,160,2.483,161,2.518,162,2.518,164,2.518,166,0.465,167,0.193,248,1.683,268,1.948,301,1.683,311,1.591,316,0.02,317,0.027,318,0.02,320,1.948,330,0.658,332,1.896,333,3.779,334,1.683,335,1.896,336,3.85,337,3.85,338,2.899,339,2.162,340,2.518,341,2.518,342,2.518,343,2.518,344,2.518,345,2.155,346,2.155,347,2.967,348,2.967,349,3.4,350,2.518,351,2.162,352,2.162,353,4.13,354,3.4,355,4.13,356,3.4,357,1.896,358,4.13,359,2.072,360,3.4,361,4.13,362,1.83,363,4.13,364,4.13,365,2.518,366,4.13,367,3.058,368,2.518,369,3.058,370,3.058,371,2.518,372,4.13,373,3.058,374,2.518,375,1.896,376,0.815,377,3.058,378,3.058,379,2.518,380,3.058,381,3.058,382,3.058,383,2.162,384,3.058,385,3.058]],["title/classes/AppPage.html",[167,0.186,386,2.09]],["body/classes/AppPage.html",[3,0.486,4,0.411,9,0.411,14,1.913,19,0.829,38,0.988,56,0.988,59,0.04,70,0.772,153,0.486,166,0.486,167,0.272,302,2.676,316,0.028,317,0.033,318,0.028,330,1.106,357,2.676,386,3.635,387,4.317,388,3.554,389,5.687,390,5.687,391,4.317,392,3.245,393,4.317,394,3.554,395,4.317,396,4.317,397,4.317,398,4.317]],["title/modules/AppRoutingModule.html",[332,1.833,348,1.627]],["body/modules/AppRoutingModule.html",[0,1.56,1,2.056,3,0.486,4,0.411,9,0.411,59,0.04,153,0.618,154,0.486,166,0.486,167,0.272,316,0.028,317,0.033,318,0.028,334,2.377,339,3.052,348,2.831,354,3.554,360,4.234,371,3.554,376,1.15,399,4.317,400,4.317,401,3.405,402,5.143,403,3.554,404,5.143,405,4.317,406,4.317,407,3.554,408,4.317]],["title/directives/BigNumberDirective.html",[303,0.873,311,0.873]],["body/directives/BigNumberDirective.html",[3,0.242,4,0.205,9,0.205,11,0.776,12,1.284,19,0.412,20,0.948,38,0.616,39,1.55,49,0.776,56,1.08,58,0.616,59,0.041,60,0.778,61,0.827,62,0.616,70,0.482,71,0.702,77,1.049,108,1.26,109,1.767,111,0.616,137,1.423,141,1.538,144,1.323,153,0.48,154,0.242,166,0.48,167,0.269,168,0.776,204,1.916,238,1.058,246,1.16,268,1.16,303,0.948,310,1.058,311,0.948,316,0.028,317,0.021,318,0.014,330,1.068,345,1.284,346,1.284,359,2.124,362,0.952,376,1.323,409,1.182,410,2.25,411,2.117,412,2.831,413,2.117,414,2.384,415,2.384,416,2.117,417,2.384,418,2.384,419,3.211,420,2.349,421,2.643,422,2.384,423,2.384,424,2.384,425,2.117,426,2.117,427,1.768,428,3.211,429,2.147,430,2.147,431,2.147,432,2.147,433,2.147,434,1.99,435,2.147,436,2.147,437,2.117,438,2.147,439,2.147,440,2.147,441,2.147,442,2.147,443,2.147,444,1.182,445,1.394,446,2.349,447,1.182,448,1.058,449,1.99,450,1.331,451,1.182,452,1.331,453,1.331,454,1.331,455,1.182,456,1.182,457,1.182,458,1.182,459,1.182,460,1.331,461,1.331,462,3.079,463,1.99,464,1.99,465,2.645,466,1.182,467,1.331,468,1.331,469,1.331,470,1.331,471,1.331,472,1.331,473,1.331,474,1.182,475,2.734,476,1.331,477,1.331,478,2.514,479,1.331,480,1.331,481,1.99,482,1.331,483,1.331,484,1.542,485,2.384,486,1.331,487,2.645,488,1.331,489,3.166,490,1.99,491,1.331,492,1.182,493,1.182,494,1.99,495,1.331,496,1.331,497,1.331,498,1.331,499,1.331,500,1.331,501,1.331,502,1.331,503,1.331,504,1.99,505,1.331,506,1.331,507,1.331,508,1.331,509,1.182,510,1.99,511,1.767,512,1.182,513,1.331,514,1.331,515,1.182,516,1.182,517,1.99,518,1.331,519,1.99,520,1.331,521,1.99,522,1.99,523,1.99,524,1.182,525,2.645,526,1.99,527,1.99,528,1.99,529,1.331,530,1.331,531,1.331,532,1.331,533,1.99,534,1.331,535,1.767,536,1.331]],["title/pipes/BigNumberFormat.html",[268,1.068,445,0.966]],["body/pipes/BigNumberFormat.html",[3,0.265,4,0.225,9,0.225,11,0.852,12,0.943,38,0.453,39,1.364,56,0.453,58,0.453,59,0.041,60,0.809,62,0.453,70,0.354,77,0.77,108,1.318,109,1.893,111,0.453,137,1.524,141,1.624,144,1.364,153,0.503,154,0.265,166,0.503,167,0.282,168,0.852,204,1.982,238,1.161,246,1.243,268,1.613,303,1.016,311,0.696,316,0.029,317,0.022,318,0.015,330,1.101,345,1.375,346,1.375,359,1.8,362,1.045,376,1.364,409,1.298,410,2.199,411,1.893,412,2.132,413,1.298,414,1.461,415,1.461,416,1.298,417,1.461,418,1.461,420,1.298,422,1.461,423,1.461,424,1.461,425,1.298,426,1.298,434,1.461,437,1.893,444,1.298,445,1.459,446,2.457,447,1.298,448,1.161,449,2.132,450,1.461,451,1.298,452,1.461,453,1.461,454,1.461,455,1.298,456,1.298,457,1.298,458,1.298,459,1.298,460,1.461,461,1.461,462,3.173,463,2.132,464,2.132,465,2.767,466,1.298,467,1.461,468,1.461,469,1.461,470,1.461,471,1.461,472,1.461,473,1.461,474,1.298,475,2.817,476,1.461,477,1.461,478,2.613,479,1.461,480,1.461,481,2.132,482,1.461,483,1.461,484,1.613,485,2.517,486,1.461,487,2.767,488,1.461,489,3.252,490,2.132,491,1.461,492,1.298,493,1.298,494,2.132,495,1.461,496,1.461,497,1.461,498,1.461,499,1.461,500,1.461,501,1.461,502,1.461,503,1.461,504,2.132,505,1.461,506,1.461,507,1.461,508,1.461,509,1.298,510,2.132,511,1.893,512,1.298,513,1.461,514,1.461,515,1.298,516,1.298,517,2.132,518,1.461,519,2.132,520,1.461,521,2.132,522,2.132,523,2.132,524,1.893,525,3.073,526,2.767,527,2.767,528,2.767,529,1.461,530,1.461,531,1.461,532,1.461,533,2.132,534,1.461,535,1.893,536,1.461,537,1.298,538,1.461,539,2.357]],["title/pipes/BigNumberMax.html",[345,1.182,445,0.966]],["body/pipes/BigNumberMax.html",[3,0.268,4,0.227,9,0.227,11,0.859,12,0.951,38,0.457,39,1.367,56,0.457,58,0.457,59,0.041,60,0.812,62,0.457,70,0.357,77,0.777,108,1.205,109,1.905,111,0.457,137,1.534,141,1.632,144,1.367,153,0.505,154,0.268,166,0.505,167,0.283,168,0.859,204,1.988,238,1.172,246,1.251,268,1.251,303,1.022,311,0.702,316,0.029,317,0.022,318,0.015,330,1.104,345,1.793,346,1.384,359,1.809,362,1.054,376,1.367,409,1.309,410,2.209,411,1.905,412,2.146,413,1.309,414,1.474,415,1.474,416,1.309,417,1.474,418,1.474,420,1.309,422,1.474,423,1.474,424,1.474,425,1.309,426,1.309,434,1.474,437,1.905,444,1.309,445,1.465,446,2.468,447,1.309,448,1.172,449,2.146,450,1.474,451,1.309,452,1.474,453,1.474,454,1.474,455,1.309,456,1.309,457,1.309,458,1.309,459,1.309,460,1.474,461,1.474,462,3.181,463,2.146,464,2.146,465,2.779,466,1.309,467,1.474,468,1.474,469,1.474,470,1.474,471,1.474,472,1.474,473,1.474,474,1.309,475,2.825,476,1.474,477,1.474,478,2.622,479,1.474,480,1.474,481,2.146,482,1.474,483,1.474,484,1.62,485,2.53,486,1.474,487,2.779,488,1.474,489,3.26,490,2.146,491,1.474,492,1.309,493,1.309,494,2.146,495,1.474,496,1.474,497,1.474,498,1.474,499,1.474,500,1.474,501,1.474,502,1.474,503,1.474,504,2.146,505,1.474,506,1.474,507,1.474,508,1.474,509,1.309,510,2.146,511,1.905,512,1.309,513,1.474,514,1.474,515,1.309,516,1.309,517,2.146,518,1.474,519,2.146,520,1.474,521,2.146,522,2.146,523,2.146,524,1.309,525,2.779,526,2.146,527,2.146,528,2.146,529,1.474,530,1.474,531,1.474,532,1.474,533,2.53,534,1.474,535,2.247,536,1.474,537,1.309,538,1.474,540,2.378]],["title/pipes/BigNumberMin.html",[346,1.182,445,0.966]],["body/pipes/BigNumberMin.html",[3,0.268,4,0.227,9,0.227,11,0.859,12,0.951,38,0.457,39,1.367,56,0.457,58,0.457,59,0.041,60,0.812,62,0.457,70,0.357,77,0.777,108,1.205,109,1.905,111,0.457,137,1.534,141,1.632,144,1.367,153,0.505,154,0.268,166,0.505,167,0.283,168,0.859,204,1.988,238,1.172,246,1.251,268,1.251,303,1.022,311,0.702,316,0.029,317,0.022,318,0.015,330,1.104,345,1.384,346,1.793,359,1.809,362,1.054,376,1.367,409,1.309,410,2.209,411,1.905,412,2.146,413,1.309,414,1.474,415,1.474,416,1.309,417,1.474,418,1.474,420,1.309,422,1.474,423,1.474,424,1.474,425,1.309,426,1.309,434,1.474,437,1.905,444,1.309,445,1.465,446,2.468,447,1.309,448,1.172,449,2.146,450,1.474,451,1.309,452,1.474,453,1.474,454,1.474,455,1.309,456,1.309,457,1.309,458,1.309,459,1.309,460,1.474,461,1.474,462,3.181,463,2.146,464,2.146,465,2.779,466,1.309,467,1.474,468,1.474,469,1.474,470,1.474,471,1.474,472,1.474,473,1.474,474,1.309,475,2.825,476,1.474,477,1.474,478,2.622,479,1.474,480,1.474,481,2.146,482,1.474,483,1.474,484,1.62,485,2.53,486,1.474,487,2.779,488,1.474,489,3.26,490,2.146,491,1.474,492,1.309,493,1.309,494,2.146,495,1.474,496,1.474,497,1.474,498,1.474,499,1.474,500,1.474,501,1.474,502,1.474,503,1.474,504,2.146,505,1.474,506,1.474,507,1.474,508,1.474,509,1.309,510,2.146,511,1.905,512,1.309,513,1.474,514,1.474,515,1.309,516,1.309,517,2.146,518,1.474,519,2.146,520,1.474,521,2.146,522,2.146,523,2.146,524,1.309,525,2.779,526,2.146,527,2.146,528,2.146,529,1.474,530,1.474,531,1.474,532,1.474,533,2.53,534,1.474,535,2.247,536,1.474,537,1.309,538,1.474,541,2.378]],["title/pipes/CalculatePipe.html",[347,1.627,445,0.966]],["body/pipes/CalculatePipe.html",[3,0.477,4,0.403,9,0.403,11,1.53,38,0.813,56,0.813,58,0.813,59,0.04,60,0.928,61,0.911,62,0.813,70,0.635,77,1.78,108,1.25,111,0.976,153,0.572,154,0.477,166,0.477,167,0.267,316,0.027,317,0.033,318,0.027,330,1.093,347,2.798,410,2.086,445,1.661,446,2.798,484,1.837,524,2.798,537,2.33,538,2.624,542,3.485,543,5.083,544,5.447,545,4.233,546,2.992,547,2.624,548,4.233,549,3.485,550,4.233]],["title/injectables/CalculateService.html",[319,0.709,547,1.833]],["body/injectables/CalculateService.html",[3,0.388,4,0.328,9,0.328,14,1.527,19,0.662,21,1.621,38,0.858,56,0.953,58,0.953,59,0.04,60,0.845,61,1.25,62,0.953,70,0.744,77,1.96,107,1.897,108,1.717,111,1.141,153,0.388,154,0.388,166,0.388,167,0.217,204,1.788,316,0.022,317,0.029,318,0.022,319,1.072,321,1.698,330,0.962,376,1.322,407,2.837,475,2.461,484,1.616,546,3.16,547,2.771,549,2.837,551,2.837,552,4.786,553,4.47,554,4.47,555,4.47,556,4.47,557,5.574,558,3.447,559,4.47,560,3.447,561,4.47,562,3.447,563,1.897,564,3.447,565,4.47,566,3.447,567,3.447,568,3.447,569,3.447,570,3.447,571,3.447,572,3.447,573,3.447,574,4.47,575,3.447,576,2.837,577,3.447,578,3.447,579,3.447]],["title/interfaces/Config.html",[323,1.31,580,1.457]],["body/interfaces/Config.html",[3,0.219,4,0.11,9,0.11,14,0.51,19,0.374,20,0.575,21,1.723,22,4.08,26,0.947,39,1.321,43,1.604,47,0.947,52,0.713,54,1.249,59,0.041,61,0.545,68,4.404,70,0.762,71,1.09,73,2.086,77,1.66,81,1.604,84,2.086,85,2.747,89,1.604,92,0.947,102,1.604,108,1.393,111,0.986,137,1.606,141,1.544,144,1.2,153,0.435,154,0.13,166,0.13,167,0.073,168,0.416,174,2.713,180,0.947,184,2.747,186,3.184,188,4.432,189,4.183,194,2.086,198,1.604,199,2.747,204,1.193,205,0.713,217,0.813,220,0.947,223,0.96,227,1.604,229,1.072,233,2.086,234,2.456,235,0.947,241,2.862,246,0.416,248,1.837,249,2.086,262,2.984,263,2.086,264,1.604,266,1.604,274,2.086,280,3.709,283,1.604,291,0.813,316,0.013,317,0.013,318,0.007,319,0.467,320,0.916,323,1.606,330,1.25,365,0.947,375,2.069,376,1.28,379,0.947,392,2.728,447,0.633,448,0.567,466,0.633,535,1.072,552,0.947,563,0.633,576,0.947,580,0.567,581,0.813,582,0.947,583,2.359,584,2.359,585,2.747,586,2.562,587,1.571,588,0.633,589,1.948,590,0.713,591,1.948,592,1.15,593,0.813,594,1.15,595,1.948,596,1.15,597,1.15,598,1.15,599,1.15,600,1.15,601,0.947,602,1.15,603,1.15,604,1.15,605,1.948,606,4.805,607,1.15,608,1.15,609,1.15,610,3.343,611,1.15,612,3.624,613,1.15,614,3.337,615,1.948,616,1.15,617,2.534,618,1.15,619,2.534,620,1.15,621,1.15,622,1.15,623,1.15,624,1.15,625,1.15,626,1.15,627,1.948,628,1.15,629,1.15,630,1.15,631,2.983,632,1.15,633,4.231,634,1.15,635,1.15,636,1.15,637,1.15,638,4.061,639,1.15,640,1.15,641,1.15,642,1.15,643,1.15,644,1.15,645,1.948,646,1.15,647,1.15,648,1.15,649,1.15,650,1.15,651,1.15,652,1.948,653,1.15,654,1.15,655,1.15,656,1.15,657,1.15,658,1.15,659,1.15,660,1.15,661,1.15,662,1.15,663,1.15,664,1.15,665,1.15,666,1.15,667,1.15,668,1.15,669,1.15,670,1.15,671,1.15,672,1.15,673,1.948,674,1.15,675,1.15,676,1.948,677,1.15,678,1.948,679,1.15,680,1.15,681,1.15,682,1.15,683,1.15,684,1.15,685,1.15,686,1.15,687,1.15,688,1.15,689,1.15,690,1.15,691,1.15,692,1.15,693,2.747,694,1.15,695,1.15,696,1.15,697,1.15,698,1.15,699,3.503,700,1.15,701,2.534,702,1.15,703,1.15,704,1.15,705,1.15,706,1.15,707,1.15,708,1.15,709,1.15,710,1.15,711,1.15,712,2.534,713,3.337,714,1.15,715,1.948,716,1.948,717,1.15,718,1.15,719,1.948,720,1.15,721,1.15,722,1.15,723,1.15,724,1.15,725,4.061,726,1.15,727,1.15,728,1.15,729,1.948,730,1.948,731,1.948,732,1.15,733,1.15,734,1.15,735,1.15,736,1.15,737,1.15,738,1.948,739,1.15,740,2.983,741,1.15,742,1.15,743,1.15,744,1.15,745,1.15,746,1.15,747,1.15,748,1.15,749,1.15,750,1.15,751,2.534,752,1.604,753,1.15,754,1.15,755,1.15,756,1.15,757,1.15,758,3.337,759,1.208,760,1.15,761,2.534,762,2.534,763,1.15,764,1.15,765,1.15,766,0.813,767,1.15,768,1.15,769,1.15,770,1.948,771,1.948,772,2.534,773,0.947,774,1.15,775,1.15,776,1.15,777,0.813,778,1.15,779,2.534,780,1.948,781,1.15,782,1.604,783,1.15,784,1.15,785,1.15,786,1.15,787,1.948,788,1.15,789,1.948,790,1.948,791,1.15,792,1.948,793,1.948,794,1.15,795,0.813,796,1.15,797,1.15,798,1.15,799,1.15,800,1.15,801,0.713,802,1.15,803,1.15,804,1.948,805,1.15,806,0.713,807,1.15,808,1.15,809,1.948,810,1.15,811,1.15,812,1.948,813,1.15,814,1.15,815,1.15,816,1.948,817,1.15,818,1.15,819,1.15,820,1.15,821,1.15,822,1.15,823,1.15,824,1.15,825,1.15,826,1.15,827,1.15,828,1.15,829,1.604,830,1.948,831,1.948,832,1.15,833,1.948,834,1.15,835,1.15,836,1.15,837,1.15,838,1.948,839,1.15,840,1.15,841,1.948]],["title/injectables/LocaleService.html",[319,0.709,842,2.09]],["body/injectables/LocaleService.html",[3,0.384,4,0.325,9,0.325,19,0.655,20,1.311,21,1.613,38,0.852,39,1.481,49,1.783,56,1.087,58,0.852,59,0.04,60,0.756,61,1.124,62,0.852,70,0.666,71,1.114,107,2.443,108,1.457,111,1.124,153,0.384,154,0.384,166,0.384,167,0.215,206,2.806,217,2.409,248,1.876,316,0.022,317,0.029,318,0.022,319,1.064,321,1.679,330,1.124,392,2.443,610,4.063,842,3.137,843,2.409,844,4.935,845,4.935,846,4.438,847,4.438,848,4.935,849,4.935,850,3.409,851,4.438,852,3.409,853,4.438,854,5.557,855,3.409,856,3.409,857,3.409,858,3.409,859,3.409,860,3.409,861,3.409,862,3.409,863,3.137,864,1.876,865,3.409,866,5.228,867,3.409,868,5.228,869,3.409,870,2.409,871,3.409,872,3.409,873,3.409,874,3.409,875,3.409,876,4.438,877,3.409]],["title/components/MetamaskErrorComponent.html",[0,1.068,160,1.31]],["body/components/MetamaskErrorComponent.html",[0,1.759,1,1.326,2,2.702,3,0.373,4,0.316,5,2.343,7,2.343,8,2.343,9,0.316,11,1.198,12,2.248,13,2.957,17,3.081,19,0.637,20,1.287,21,1.95,38,0.837,49,1.198,56,1.059,58,0.637,59,0.04,60,0.881,61,1.156,62,0.637,70,0.497,71,1.424,74,3.33,111,0.993,153,0.491,154,0.373,155,2.055,156,1.469,158,1.825,160,2.292,166,0.373,167,0.209,174,2.055,176,3.33,186,3.441,223,2.647,225,2.702,250,3.081,301,1.825,302,2.702,303,0.979,304,3.656,305,2.343,307,2.343,308,2.343,309,2.343,310,1.633,311,0.979,312,2.343,313,1.633,314,2.055,315,2.343,316,0.021,317,0.028,318,0.021,878,4.628,879,2.729,880,4.358,881,4.258,882,4.258,883,2.729,884,4.423,885,4.358,886,3.315,887,2.729,888,3.588,889,4.358,890,3.315,891,2.729,892,2.729,893,2.729,894,3.315,895,3.315,896,3.315,897,2.729,898,2.729,899,3.588,900,3.588]],["title/injectables/MetamaskService.html",[54,1.457,319,0.709]],["body/injectables/MetamaskService.html",[3,0.27,4,0.228,9,0.228,14,1.061,19,0.46,20,1.027,21,1.826,38,0.668,39,1.489,49,0.865,54,1.714,56,1.031,58,0.863,59,0.041,60,0.766,61,1.133,62,0.863,70,0.615,71,1.137,77,1.137,111,0.957,144,1.198,153,0.506,154,0.27,166,0.27,167,0.151,168,0.865,176,3.188,205,1.484,223,2.646,225,3.188,229,2.255,241,3.188,246,1.726,287,1.484,316,0.015,317,0.022,318,0.015,319,0.834,320,1.801,321,1.179,323,1.541,330,1.027,338,2.54,375,1.484,376,1.198,392,1.915,484,1.481,546,1.692,563,1.318,580,1.179,583,2.896,584,2.459,586,2.896,587,2.54,588,1.318,590,2.961,593,2.896,699,2.459,759,1.484,766,2.896,773,1.971,777,3.178,795,1.692,801,1.484,806,1.484,864,1.318,870,1.692,901,1.692,902,3.373,903,3.478,904,3.478,905,3.478,906,2.394,907,3.478,908,2.863,909,2.394,910,2.863,911,2.394,912,2.863,913,3.702,914,2.394,915,2.394,916,2.394,917,2.394,918,2.394,919,1.971,920,1.971,921,1.971,922,1.971,923,3.373,924,1.971,925,1.971,926,3.373,927,1.971,928,1.971,929,1.971,930,1.971,931,1.971,932,2.863,933,1.971,934,1.971,935,1.971,936,2.863,937,1.971,938,1.971,939,1.971,940,2.863,941,1.971,942,1.971,943,1.971,944,1.971,945,2.863,946,1.971,947,1.971,948,1.971,949,1.971,950,4.102,951,3.635,952,4.233,953,3.932,954,1.971,955,1.971,956,1.971,957,1.971,958,1.971,959,1.971,960,1.971,961,1.971,962,1.971,963,1.971,964,1.971,965,1.971,966,2.863,967,1.971,968,3.373,969,1.971,970,1.971,971,1.971,972,1.971,973,1.971]],["title/directives/MinMaxDirective.html",[303,0.873,313,1.457]],["body/directives/MinMaxDirective.html",[3,0.378,4,0.32,9,0.32,11,1.215,12,1.759,19,0.645,20,1.299,38,0.844,39,1.475,49,1.215,56,1.083,58,0.645,59,0.041,60,0.573,61,0.946,62,0.645,70,0.504,71,1.098,111,0.645,137,1.949,141,1.759,153,0.495,154,0.378,166,0.378,167,0.212,168,1.215,238,1.656,303,1.299,310,1.656,313,2.167,314,3.345,316,0.038,317,0.028,318,0.022,359,2.453,362,1.49,376,1.172,410,2.167,411,2.698,413,2.698,416,2.698,420,2.862,421,3.621,425,2.698,426,2.698,427,2.767,437,2.698,444,1.85,451,1.85,455,1.85,456,1.85,457,1.85,458,1.85,459,1.85,474,1.85,478,2.971,492,1.85,493,1.85,509,1.85,511,2.421,512,1.85,515,1.85,516,1.85,974,2.767,975,4.398,976,3.361,977,3.361,978,3.361,979,3.361,980,3.361,981,3.361,982,3.361,983,4.398,984,3.361,985,4.398]],["title/injectables/ThemeService.html",[51,1.833,319,0.709]],["body/injectables/ThemeService.html",[3,0.38,4,0.322,9,0.322,14,1.497,19,0.648,20,1.303,21,1.892,34,4.288,38,0.847,39,1.477,49,1.775,51,2.735,56,1.064,58,0.847,59,0.04,60,0.752,61,1.057,62,0.847,66,2.78,70,0.781,71,1.766,107,1.859,108,0.997,111,1.1,144,0.9,148,2.78,153,0.497,154,0.38,166,0.38,167,0.213,216,4.045,229,1.859,254,2.78,255,2.78,316,0.022,317,0.029,318,0.022,319,1.058,321,1.664,330,1.192,376,1.309,563,1.859,587,3.045,588,1.859,759,2.093,806,2.093,986,2.78,987,4.913,988,4.411,989,5.209,990,4.411,991,5.209,992,4.411,993,4.411,994,3.377,995,3.377,996,4.411,997,3.377,998,3.377,999,3.377,1000,3.377,1001,3.377,1002,3.377,1003,3.377,1004,3.377,1005,3.377,1006,3.377,1007,3.377,1008,3.377,1009,3.377,1010,3.377,1011,3.377,1012,3.377,1013,3.377]],["title/components/TransactionSuccessModalComponent.html",[0,1.068,156,1.31]],["body/components/TransactionSuccessModalComponent.html",[0,1.722,1,1.269,2,2.625,3,0.357,4,0.302,5,2.244,7,2.244,8,2.244,9,0.302,11,1.147,12,2.224,13,2.915,17,2.993,19,0.61,20,1.25,21,1.904,38,0.813,39,1.355,49,1.147,56,1.046,58,0.61,59,0.04,60,0.866,61,1.139,62,0.61,70,0.476,71,1.384,74,3.283,111,0.813,153,0.537,154,0.357,155,1.968,156,2.253,158,3.23,160,1.407,166,0.357,167,0.2,174,3.283,223,1.564,250,2.993,301,1.747,302,2.625,303,0.937,304,3.594,305,2.244,307,2.244,308,2.244,309,3.368,310,1.564,311,0.937,312,2.244,313,1.564,314,1.968,315,2.244,316,0.021,317,0.027,318,0.021,320,2.01,323,2.112,368,2.613,801,1.968,881,4.185,882,4.185,883,2.613,884,4.36,887,2.613,888,3.486,891,2.613,892,2.613,893,2.613,897,3.486,898,2.613,899,3.486,900,3.486,1014,4.579,1015,2.613,1016,4.235,1017,4.765,1018,4.235,1019,3.174,1020,4.235,1021,3.174,1022,3.174,1023,3.174,1024,3.174,1025,3.174,1026,3.174,1027,3.174,1028,4.235]],["title/interfaces/Window.html",[580,1.457,864,1.627]],["body/interfaces/Window.html",[3,0.306,4,0.259,9,0.259,14,1.203,19,0.521,20,1.123,21,1.556,39,1.268,54,1.337,59,0.041,61,0.584,71,0.887,77,0.887,111,0.843,144,1.268,153,0.536,154,0.306,166,0.306,167,0.171,168,0.981,176,3.307,205,1.682,223,2.726,225,3.307,229,2.418,241,2.951,246,1.811,287,1.682,316,0.018,317,0.025,318,0.018,319,0.912,320,1.72,323,1.203,330,1.078,338,1.682,375,1.682,376,1.268,392,1.494,484,1.587,563,1.494,580,1.337,581,1.918,583,1.918,584,2.689,586,1.918,587,2.358,588,1.494,590,2.723,593,1.918,699,2.689,759,1.682,766,3.105,777,3.105,795,1.918,801,1.682,806,1.682,864,2.094,870,1.918,901,1.918,902,2.234,908,2.234,910,2.234,912,2.234,913,3.132,919,2.234,920,2.234,921,3.919,922,2.234,923,3.616,924,2.234,925,2.234,926,3.616,927,2.234,928,2.234,929,2.234,930,2.234,931,2.234,932,3.132,933,2.234,934,2.234,935,2.234,936,3.132,937,2.234,938,2.234,939,2.234,940,3.132,941,2.234,942,2.234,943,2.234,944,2.234,945,3.132,946,2.234,947,2.234,948,2.234,949,2.234,950,4.278,951,3.771,952,4.392,953,4.127,954,2.234,955,2.234,956,2.234,957,2.234,958,2.234,959,2.234,960,2.234,961,2.234,962,2.234,963,2.234,964,2.234,965,2.234,966,3.132,967,2.234,968,3.616,969,2.234,970,2.234,971,2.234,972,2.234,973,2.234]],["title/coverage.html",[1029,3.323]],["body/coverage.html",[0,1.801,1,1.391,9,0.332,10,2.865,51,2.157,52,2.157,54,1.714,59,0.04,61,0.748,144,0.927,156,1.542,158,1.916,160,1.542,167,0.22,204,2.461,248,2.476,268,1.258,303,1.328,311,1.028,313,1.714,316,0.023,317,0.029,318,0.023,319,1.34,320,1.258,322,2.865,323,1.542,345,1.391,346,1.391,347,1.916,352,2.46,383,2.46,386,2.46,388,2.865,409,2.9,445,1.722,542,2.865,547,2.157,551,2.865,580,2.216,582,3.703,601,2.865,752,4.682,842,2.46,843,3.179,863,2.46,864,1.916,878,2.865,879,2.865,901,3.179,974,2.865,986,2.865,1014,2.865,1015,2.865,1029,2.865,1030,3.48,1031,3.48,1032,3.48,1033,3.48,1034,3.48,1035,3.48,1036,5.978,1037,4.984,1038,3.48,1039,3.48,1040,4.498,1041,4.498,1042,4.984,1043,3.48,1044,3.48,1045,3.48,1046,3.48,1047,3.48,1048,3.48,1049,3.48,1050,4.498,1051,3.48,1052,4.498,1053,3.48,1054,3.48,1055,3.48,1056,3.48]],["title/dependencies.html",[335,2.204,1057,2.468]],["body/dependencies.html",[59,0.04,154,0.487,316,0.028,317,0.033,318,0.028,335,2.682,356,4.239,357,3.192,362,1.917,403,3.561,448,2.131,588,2.381,590,2.682,1058,4.326,1059,4.945,1060,4.326,1061,5.149,1062,4.326,1063,4.326,1064,4.326,1065,4.326,1066,4.326,1067,4.326,1068,4.326,1069,4.326,1070,4.326,1071,4.326,1072,4.326,1073,4.326,1074,4.326]],["title/miscellaneous/functions.html",[1075,2.032,1076,2.928]],["body/miscellaneous/functions.html",[19,0.883,58,0.883,59,0.038,60,0.784,62,0.883,70,0.801,316,0.03,317,0.035,318,0.03,352,3.252,359,2.039,374,3.788,383,3.774,843,3.252,863,3.987,1075,3.788,1076,3.788,1077,4.601,1078,4.601]],["title/index.html",[19,0.474,829,2.032,1079,2.468]],["body/index.html",[0,1.917,4,0.38,13,2.193,59,0.032,60,0.679,144,1.062,222,3.28,259,4.678,291,3.912,316,0.026,317,0.032,318,0.026,351,2.816,394,3.28,585,3.28,693,3.28,782,4.033,951,2.816,1059,3.28,1080,3.984,1081,4.899,1082,3.984,1083,5.305,1084,5.305,1085,3.984,1086,3.984,1087,4.899,1088,5.86,1089,3.984,1090,3.984,1091,3.984,1092,3.984,1093,3.984,1094,3.984,1095,3.984,1096,3.984,1097,5.305,1098,5.305,1099,3.984,1100,5.682,1101,3.984,1102,3.984,1103,3.984,1104,3.984,1105,3.984,1106,3.984,1107,4.899,1108,4.899,1109,5.534,1110,3.984,1111,4.899,1112,3.984,1113,3.984,1114,3.984,1115,5.305,1116,3.984,1117,3.984,1118,2.816,1119,3.984,1120,3.984,1121,3.984]],["title/modules.html",[334,2.222]],["body/modules.html",[59,0.035,316,0.031,317,0.035,318,0.031,333,2.927,334,2.599,348,2.599,357,2.927,1122,4.721,1123,4.721,1124,5.419,1125,4.721,1126,4.721]],["title/overview.html",[1118,2.853]],["body/overview.html",[1,2.338,2,2.443,59,0.039,156,2.34,160,2.34,167,0.249,246,1.424,268,1.908,287,3.418,301,2.169,310,1.942,311,1.559,316,0.025,317,0.031,318,0.025,320,1.908,321,1.942,332,2.443,333,3.839,334,2.169,335,2.443,336,3.245,337,3.245,338,2.443,339,2.786,340,3.245,341,3.245,342,3.245,343,3.245,344,3.245,345,2.111,346,2.111,347,2.906,348,2.906,349,4.006,350,3.245,351,2.786,401,2.443,484,1.424,537,2.169,581,2.786,1118,2.786,1127,3.941,1128,3.941]],["title/routes.html",[401,2.502]],["body/routes.html",[59,0.035,316,0.031,317,0.035,318,0.031,401,2.985]]],"invertedIndex":[["",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["04.06.2022",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":484,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["1).tonumber",{"_index":499,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["1.3.4",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["10.2.0",{"_index":1059,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.7",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["100,000",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["1000",{"_index":576,"title":{},"body":{"injectables/CalculateService.html":{},"interfaces/Config.html":{}}}],["105",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["12.1",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["120",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["13.31",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["135",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["14.641",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["15",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["150",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["16.1051",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["165",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["17.71561",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["180",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["18:true:false:1",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["18:true:false:18",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["18:true:false:6",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["19.487171",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["2.0.0",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":739,"title":{},"body":{"interfaces/Config.html":{}}}],["21.4358881",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["23.57947691",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["25.9354246",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["25/39",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["256",{"_index":498,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["28.53116706",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["30",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["33",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":1128,"title":{},"body":{"overview.html":{}}}],["4.16.2",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["440px",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["45",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":1127,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["64",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["75",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["9.0.1",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["9/27",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["9]+)[0",{"_index":506,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["_window",{"_index":863,"title":{},"body":{"injectables/LocaleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["abi",{"_index":773,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{}}}],["accept",{"_index":695,"title":{},"body":{"interfaces/Config.html":{}}}],["accessors",{"_index":847,"title":{},"body":{"injectables/LocaleService.html":{}}}],["account",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["account.address",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["accounts",{"_index":964,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["accounts.length",{"_index":965,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["accounts[0",{"_index":967,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["accountsubscribe",{"_index":803,"title":{},"body":{"interfaces/Config.html":{}}}],["accout",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["add",{"_index":751,"title":{},"body":{"interfaces/Config.html":{}}}],["address",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["adress",{"_index":830,"title":{},"body":{"interfaces/Config.html":{}}}],["algovest",{"_index":1080,"title":{},"body":{"index.html":{}}}],["all_contracts_params",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["allaccountsubscribers",{"_index":594,"title":{},"body":{"interfaces/Config.html":{}}}],["alldeposits.reverse",{"_index":691,"title":{},"body":{"interfaces/Config.html":{}}}],["allow",{"_index":703,"title":{},"body":{"interfaces/Config.html":{}}}],["allow.minus(amount",{"_index":706,"title":{},"body":{"interfaces/Config.html":{}}}],["allowance",{"_index":694,"title":{},"body":{"interfaces/Config.html":{}}}],["allowance(this.account.address",{"_index":700,"title":{},"body":{"interfaces/Config.html":{}}}],["allowed",{"_index":705,"title":{},"body":{"interfaces/Config.html":{}}}],["allowed.isnegative",{"_index":707,"title":{},"body":{"interfaces/Config.html":{}}}],["allsubscribers",{"_index":1008,"title":{},"body":{"injectables/ThemeService.html":{}}}],["allsubscribers.filter((exobs",{"_index":1012,"title":{},"body":{"injectables/ThemeService.html":{}}}],["alltransactionsubscribers",{"_index":595,"title":{},"body":{"interfaces/Config.html":{}}}],["amount",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["amountvalue",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["analytics",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":1083,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Config.html":{}}}],["angular/compiler",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["angular/material/dialog",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["angular/platform",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"index.html":{}}}],["app.component",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["appbignumber",{"_index":412,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["appbignumber]'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":320,"title":{"injectables/AppConfig.html":{}},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig.net",{"_index":925,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["appconfig.network",{"_index":927,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["appconfig.production",{"_index":924,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["application",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["appminmaxnumber",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"directives/MinMaxDirective.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["appmodule",{"_index":333,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":386,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":348,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approve(this.stakingaddress",{"_index":720,"title":{},"body":{"interfaces/Config.html":{}}}],["apy",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["apyselected",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["args",{"_index":544,"title":{},"body":{"pipes/CalculatePipe.html":{}}}],["array",{"_index":913,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["artifacts",{"_index":1101,"title":{},"body":{"index.html":{}}}],["asbn",{"_index":527,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["assets/js",{"_index":784,"title":{},"body":{"interfaces/Config.html":{}}}],["async",{"_index":610,"title":{},"body":{"interfaces/Config.html":{},"injectables/LocaleService.html":{}}}],["authorized",{"_index":953,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["automatically",{"_index":1093,"title":{},"body":{"index.html":{}}}],["available",{"_index":1126,"title":{},"body":{"modules.html":{}}}],["avarage",{"_index":646,"title":{},"body":{"interfaces/Config.html":{}}}],["average",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["avs",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["avsaddress",{"_index":596,"title":{},"body":{"interfaces/Config.html":{}}}],["b",{"_index":568,"title":{},"body":{"injectables/CalculateService.html":{}}}],["balance",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["balanceof(address",{"_index":728,"title":{},"body":{"interfaces/Config.html":{}}}],["bignumber",{"_index":447,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{}}}],["bignumber(allowance",{"_index":704,"title":{},"body":{"interfaces/Config.html":{}}}],["bignumber(originalvalue",{"_index":488,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumber(originalvalue).isnan",{"_index":477,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumber(this.appbignumber.max",{"_index":502,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumber(this.latestvalue",{"_index":518,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumber(this.latestvalue).times(math.pow(10",{"_index":513,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumber(value).div(math.pow(10",{"_index":519,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumber.js",{"_index":448,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{},"dependencies.html":{}}}],["bignumber.max.apply(null",{"_index":536,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumber.min.apply(null",{"_index":534,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumberdirective",{"_index":311,"title":{"directives/BigNumberDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bignumberformat",{"_index":268,"title":{"pipes/BigNumberFormat.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"coverage.html":{},"overview.html":{}}}],["bignumbermax",{"_index":345,"title":{"pipes/BigNumberMax.html":{}},"body":{"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"coverage.html":{},"overview.html":{}}}],["bignumbermin",{"_index":346,"title":{"pipes/BigNumberMin.html":{}},"body":{"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"coverage.html":{},"overview.html":{}}}],["bignumbervalue",{"_index":487,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumbervalue.div(math.pow(2",{"_index":497,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumbervalue.dp(round",{"_index":530,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumbervalue.dp(this.currentdecimals",{"_index":495,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumbervalue.isnan",{"_index":490,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumbervalue.times(math.pow(10",{"_index":496,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["bignumbervalue.tostring(10",{"_index":532,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["billion",{"_index":571,"title":{},"body":{"injectables/CalculateService.html":{}}}],["blockchain",{"_index":731,"title":{},"body":{"interfaces/Config.html":{}}}],["boolean",{"_index":586,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["bootstrap",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["break",{"_index":876,"title":{},"body":{"injectables/LocaleService.html":{}}}],["browse",{"_index":1124,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":395,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1100,"title":{},"body":{"index.html":{}}}],["button",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["calculate",{"_index":543,"title":{},"body":{"pipes/CalculatePipe.html":{}}}],["calculate.service",{"_index":548,"title":{},"body":{"pipes/CalculatePipe.html":{}}}],["calculatepipe",{"_index":347,"title":{"pipes/CalculatePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CalculatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["calculateservice",{"_index":547,"title":{"injectables/CalculateService.html":{}},"body":{"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"coverage.html":{}}}],["calculateservice.getfloatwithsuffix(value",{"_index":549,"title":{},"body":{"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{}}}],["calculateservice.getsmallfloatwithsuffix(value",{"_index":550,"title":{},"body":{"pipes/CalculatePipe.html":{}}}],["call",{"_index":633,"title":{},"body":{"interfaces/Config.html":{}}}],["callallaccountssubscribers",{"_index":809,"title":{},"body":{"interfaces/Config.html":{}}}],["callalltransactionssubscribers(transaction",{"_index":744,"title":{},"body":{"interfaces/Config.html":{}}}],["callsubscribers",{"_index":988,"title":{},"body":{"injectables/ThemeService.html":{}}}],["callsubscribers(theme",{"_index":993,"title":{},"body":{"injectables/ThemeService.html":{}}}],["case",{"_index":875,"title":{},"body":{"injectables/LocaleService.html":{}}}],["catch",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["catch((err",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["chain",{"_index":945,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["change",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["check",{"_index":693,"title":{},"body":{"interfaces/Config.html":{},"index.html":{}}}],["checking",{"_index":730,"title":{},"body":{"interfaces/Config.html":{}}}],["checktransaction(tx",{"_index":749,"title":{},"body":{"interfaces/Config.html":{}}}],["checktx",{"_index":748,"title":{},"body":{"interfaces/Config.html":{}}}],["checktx(tx",{"_index":733,"title":{},"body":{"interfaces/Config.html":{}}}],["checkvalue",{"_index":465,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["choose",{"_index":956,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["class",{"_index":167,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":387,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":1084,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["close",{"_index":899,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["closemodal",{"_index":882,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["cluster_appmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":951,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"index.html":{}}}],["coin",{"_index":627,"title":{},"body":{"interfaces/Config.html":{}}}],["coins",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["collection",{"_index":660,"title":{},"body":{"interfaces/Config.html":{}}}],["color",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{}}}],["command",{"_index":1119,"title":{},"body":{"index.html":{}}}],["complete",{"_index":742,"title":{},"body":{"interfaces/Config.html":{}}}],["completed",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"overview.html":{}}}],["components/metamask/metamask",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/transaction/transaction",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["config",{"_index":323,"title":{"interfaces/Config.html":{}},"body":{"injectables/AppConfig.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["config.getconfig",{"_index":1023,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["configuration",{"_index":774,"title":{},"body":{"interfaces/Config.html":{}}}],["connect",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["console",{"_index":449,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["console.log('err",{"_index":796,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('error",{"_index":722,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('getsevendays",{"_index":651,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('gettokenbalance",{"_index":827,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('gettotalavs",{"_index":634,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('gettotalstakedavs",{"_index":639,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('gettotalstakers",{"_index":643,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('info',info",{"_index":608,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('init",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('percent',percent",{"_index":648,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('stakes',stakes",{"_index":662,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('success",{"_index":756,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('time',time",{"_index":654,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('totalavs',totalavs",{"_index":629,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('totalstakedavs',totalstakedavs",{"_index":636,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log('totalstakers',totalstakers",{"_index":641,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log(account",{"_index":821,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log(alldeposits",{"_index":690,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log(err",{"_index":822,"title":{},"body":{"interfaces/Config.html":{}}}],["console.log(this.amountvalue",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["constants",{"_index":797,"title":{},"body":{"interfaces/Config.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"directives/BigNumberDirective.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["constructor(config",{"_index":906,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["constructor(dialogref",{"_index":883,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["constructor(injector",{"_index":427,"title":{},"body":{"directives/BigNumberDirective.html":{},"directives/MinMaxDirective.html":{}}}],["constructor(private",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"interfaces/Window.html":{}}}],["constructor(public",{"_index":893,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["constructor(themeprovider",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":397,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["contracrs",{"_index":781,"title":{},"body":{"interfaces/Config.html":{}}}],["contract",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["contractaddress",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["contracts",{"_index":772,"title":{},"body":{"interfaces/Config.html":{}}}],["contracts_params",{"_index":601,"title":{},"body":{"interfaces/Config.html":{},"coverage.html":{}}}],["contractservice",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"coverage.html":{}}}],["contractservice.callallaccountssubscribers",{"_index":817,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.callalltransactionssubscribers(txinfo",{"_index":743,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.checktransaction(tx",{"_index":747,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.checktx(tx",{"_index":732,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getaccount().then((account",{"_index":820,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getaccountstakes().then((stakes",{"_index":661,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getallowance(amount).then",{"_index":697,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getcontractsinfo(false).then",{"_index":775,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getcontracttokenaddress",{"_index":831,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getmaininfo().then((info",{"_index":607,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getsevendays().then((percent",{"_index":647,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.getstaticinfo().then",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Config.html":{}}}],["contractservice.gettimestampfromcontract().then((time",{"_index":653,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.gettokenbalance(address).then((balance)=>{console.log('balance',balance",{"_index":726,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.gettotalavs().then((totalavs",{"_index":628,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.initall().then",{"_index":785,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.loadaccountinfo",{"_index":810,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.startstake(amount",{"_index":709,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.totalstakedavs().then((totalstakedavs",{"_index":635,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.totalstakers().then((totalstakers",{"_index":640,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.transactionssubscribe().subscribe((transaction",{"_index":755,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.unstake(sessionid,id).then(()=>{console.log('complete');}).catch",{"_index":721,"title":{},"body":{"interfaces/Config.html":{}}}],["contractservice.updatebalance",{"_index":813,"title":{},"body":{"interfaces/Config.html":{}}}],["control",{"_index":413,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["coverage",{"_index":1029,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["culture",{"_index":853,"title":{},"body":{"injectables/LocaleService.html":{}}}],["culture.tolowercase",{"_index":874,"title":{},"body":{"injectables/LocaleService.html":{}}}],["currentdecimals",{"_index":414,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["dark",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{}}}],["dark)').matches",{"_index":1002,"title":{},"body":{"injectables/ThemeService.html":{}}}],["data",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["data.msg",{"_index":895,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["data.title",{"_index":897,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["date",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["date().gettime",{"_index":789,"title":{},"body":{"interfaces/Config.html":{}}}],["day",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["day).then",{"_index":710,"title":{},"body":{"interfaces/Config.html":{}}}],["day.apy",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["day.value",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["days",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["dayselect",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["dayselected",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["decimalpart",{"_index":415,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["decimals",{"_index":525,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["decimals).toformat(formatnumberparams",{"_index":531,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["decimalschange",{"_index":422,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["decimalseparator",{"_index":523,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["declarations",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":919,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["decorators",{"_index":887,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["default",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"injectables/ThemeService.html":{}}}],["defined",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"classes/AppPage.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["dependencies",{"_index":335,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["detect",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["detectcolorscheme",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":1090,"title":{},"body":{"index.html":{}}}],["development",{"_index":1086,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["dialogref",{"_index":881,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["directive",{"_index":303,"title":{"directives/BigNumberDirective.html":{},"directives/MinMaxDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"components/MetamaskErrorComponent.html":{},"directives/MinMaxDirective.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{}}}],["directives",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"components/MetamaskErrorComponent.html":{},"directives/MinMaxDirective.html":{},"components/TransactionSuccessModalComponent.html":{},"overview.html":{}}}],["directives/bignumber/bignumber",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1099,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1104,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1103,"title":{},"body":{"index.html":{}}}],["div(math.pow(10",{"_index":503,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["document.documentelement.setattribute('id",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{}}}],["documentation",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["don't",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["don\\'t",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["dropdown",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1113,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":388,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":393,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":391,"title":{},"body":{"classes/AppPage.html":{}}}],["earned",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["element(by.css('app",{"_index":396,"title":{},"body":{"classes/AppPage.html":{}}}],["emitevent",{"_index":511,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["en",{"_index":854,"title":{},"body":{"injectables/LocaleService.html":{}}}],["end",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"index.html":{}}}],["endday",{"_index":659,"title":{},"body":{"interfaces/Config.html":{}}}],["entrycomponents",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["err",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/MetamaskErrorComponent.html":{}}}],["error",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["error'},{'name",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["error.component",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["error.component.html",{"_index":880,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["error.component.ts",{"_index":879,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":885,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["error.component.ts:12",{"_index":889,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["error.component.ts:16",{"_index":886,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["error.component.ts:9",{"_index":890,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["errorparams",{"_index":942,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["errors",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["errors.max",{"_index":984,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["errors.pattern",{"_index":491,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["errors.required",{"_index":493,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["errors.totalmaximum",{"_index":500,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["eth",{"_index":591,"title":{},"body":{"interfaces/Config.html":{}}}],["ethereum",{"_index":921,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["etherscan",{"_index":1028,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["ethlink",{"_index":1017,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["eventemitter",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["execute",{"_index":1111,"title":{},"body":{"index.html":{}}}],["exobs",{"_index":1013,"title":{},"body":{"injectables/ThemeService.html":{}}}],["export",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["exports",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["extension",{"_index":970,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["failed",{"_index":753,"title":{},"body":{"interfaces/Config.html":{}}}],["false",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{},"directives/MinMaxDirective.html":{}}}],["fee",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["files",{"_index":1095,"title":{},"body":{"index.html":{}}}],["finally",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocaleService.html":{}}}],["fixed",{"_index":557,"title":{},"body":{"injectables/CalculateService.html":{}}}],["fixedresult",{"_index":479,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["fixedresult.indexof",{"_index":482,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["fixedresult.length",{"_index":483,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["flag",{"_index":1106,"title":{},"body":{"index.html":{}}}],["format",{"_index":526,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["formatnumberparams",{"_index":529,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["formsmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":971,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["fromaccount",{"_index":712,"title":{},"body":{"interfaces/Config.html":{}}}],["full",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CalculateService.html":{}}}],["function",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"coverage.html":{}}}],["functions",{"_index":1076,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1114,"title":{},"body":{"index.html":{}}}],["gb",{"_index":877,"title":{},"body":{"injectables/LocaleService.html":{}}}],["generate",{"_index":1097,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1082,"title":{},"body":{"index.html":{}}}],["get(`/assets/js/constants.json?v=${new",{"_index":794,"title":{},"body":{"interfaces/Config.html":{}}}],["get(`/assets/js/settings.json?v=${new",{"_index":788,"title":{},"body":{"interfaces/Config.html":{}}}],["getaccount",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["getaccount(noenable",{"_index":823,"title":{},"body":{"interfaces/Config.html":{}}}],["getaccounts",{"_index":903,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["getaccounts(noenable",{"_index":908,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["getaccountstakes",{"_index":670,"title":{},"body":{"interfaces/Config.html":{}}}],["getallowance(amount",{"_index":698,"title":{},"body":{"interfaces/Config.html":{}}}],["getbalance",{"_index":904,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["getbalance(address",{"_index":910,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["getconfig",{"_index":324,"title":{},"body":{"injectables/AppConfig.html":{}}}],["getcontract",{"_index":905,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["getcontract(abi",{"_index":912,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["getcontractsinfo",{"_index":763,"title":{},"body":{"interfaces/Config.html":{}}}],["getcontractsinfo(noenable",{"_index":776,"title":{},"body":{"interfaces/Config.html":{}}}],["getcontracttokenaddress",{"_index":832,"title":{},"body":{"interfaces/Config.html":{}}}],["getdayunixtime(date",{"_index":657,"title":{},"body":{"interfaces/Config.html":{}}}],["getfloatwithsuffix",{"_index":553,"title":{},"body":{"injectables/CalculateService.html":{}}}],["getfloatwithsuffix(value",{"_index":556,"title":{},"body":{"injectables/CalculateService.html":{}}}],["getintegerwithsuffix",{"_index":554,"title":{},"body":{"injectables/CalculateService.html":{}}}],["getintegerwithsuffix(value",{"_index":559,"title":{},"body":{"injectables/CalculateService.html":{}}}],["getlocale",{"_index":857,"title":{},"body":{"injectables/LocaleService.html":{}}}],["getmaininfo",{"_index":611,"title":{},"body":{"interfaces/Config.html":{}}}],["getnativewindow",{"_index":861,"title":{},"body":{"injectables/LocaleService.html":{}}}],["getsevendays",{"_index":649,"title":{},"body":{"interfaces/Config.html":{}}}],["getsmallfloatwithsuffix",{"_index":555,"title":{},"body":{"injectables/CalculateService.html":{}}}],["getsmallfloatwithsuffix(value",{"_index":561,"title":{},"body":{"injectables/CalculateService.html":{}}}],["getstakingaddress",{"_index":834,"title":{},"body":{"interfaces/Config.html":{}}}],["getstaticinfo",{"_index":764,"title":{},"body":{"interfaces/Config.html":{}}}],["gettheme",{"_index":989,"title":{},"body":{"injectables/ThemeService.html":{}}}],["gettimestampfromcontract(date",{"_index":656,"title":{},"body":{"interfaces/Config.html":{}}}],["getting",{"_index":829,"title":{"index.html":{}},"body":{"interfaces/Config.html":{}}}],["gettitletext",{"_index":389,"title":{},"body":{"classes/AppPage.html":{}}}],["gettokenbalance(address",{"_index":727,"title":{},"body":{"interfaces/Config.html":{}}}],["gettotalavs",{"_index":630,"title":{},"body":{"interfaces/Config.html":{}}}],["gettotalstakedavs",{"_index":637,"title":{},"body":{"interfaces/Config.html":{}}}],["gettotalstakers",{"_index":642,"title":{},"body":{"interfaces/Config.html":{}}}],["global",{"_index":920,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["go",{"_index":1117,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1125,"title":{},"body":{"modules.html":{}}}],["groupseparator",{"_index":521,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["groupsize",{"_index":522,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["help",{"_index":1115,"title":{},"body":{"index.html":{}}}],["html",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["http://localhost:4200",{"_index":1092,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":589,"title":{},"body":{"interfaces/Config.html":{}}}],["httpclientmodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["https",{"_index":783,"title":{},"body":{"interfaces/Config.html":{}}}],["https://${this.appconfig.network}.etherscan.io/tx/${data.tx",{"_index":1027,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["https://etherscan.io/tx/${data.tx",{"_index":1026,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["httpservice",{"_index":604,"title":{},"body":{"interfaces/Config.html":{}}}],["id",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["identifier",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":410,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"directives/MinMaxDirective.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["imports",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"classes/AppPage.html":{},"directives/BigNumberDirective.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["info:{totalavs,totalstakedavs,totalstakers,balance",{"_index":609,"title":{},"body":{"interfaces/Config.html":{}}}],["information",{"_index":606,"title":{},"body":{"interfaces/Config.html":{}}}],["infromation",{"_index":819,"title":{},"body":{"interfaces/Config.html":{}}}],["initall",{"_index":786,"title":{},"body":{"interfaces/Config.html":{}}}],["initdata",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["initialize",{"_index":835,"title":{},"body":{"interfaces/Config.html":{}}}],["initializeapp",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["initializeapp(injector",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializecontracts",{"_index":771,"title":{},"body":{"interfaces/Config.html":{}}}],["initialized",{"_index":761,"title":{},"body":{"interfaces/Config.html":{}}}],["inject",{"_index":891,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":888,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["injectable",{"_index":319,"title":{"injectables/AppConfig.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/AppConfig.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["injectables",{"_index":321,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["injector",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{},"miscellaneous/functions.html":{}}}],["injector.get(contractservice",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["input",{"_index":444,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["input('appbignumber",{"_index":450,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["input('appminmaxnumber",{"_index":981,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["input('decimalschange",{"_index":454,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["input('maxvaluechange",{"_index":453,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["input('minvaluechange",{"_index":452,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["input('ngmodel",{"_index":451,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["input('required",{"_index":455,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["inputs",{"_index":421,"title":{},"body":{"directives/BigNumberDirective.html":{},"directives/MinMaxDirective.html":{}}}],["install",{"_index":972,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["interface",{"_index":580,"title":{"interfaces/Config.html":{},"interfaces/Window.html":{}},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["interfaces",{"_index":581,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["is_production",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["isnan(+result",{"_index":982,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["isnan(this.appbignumber.decimals",{"_index":463,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["isvalidmetamasknetwork",{"_index":944,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["isvalidmetamasknetwork(observer",{"_index":960,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["isvalidmetamasknetwork(observer).then",{"_index":962,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["item",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{}}}],["iterations",{"_index":574,"title":{},"body":{"injectables/CalculateService.html":{}}}],["iterations)).tofixed(fixed",{"_index":578,"title":{},"body":{"injectables/CalculateService.html":{}}}],["json.stringify(errors",{"_index":509,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["k",{"_index":566,"title":{},"body":{"injectables/CalculateService.html":{}}}],["karma",{"_index":1112,"title":{},"body":{"index.html":{}}}],["key",{"_index":614,"title":{},"body":{"interfaces/Config.html":{}}}],["latestvalue",{"_index":416,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["legend",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"overview.html":{}}}],["list",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["load",{"_index":779,"title":{},"body":{"interfaces/Config.html":{}}}],["loadaccountinfo",{"_index":811,"title":{},"body":{"interfaces/Config.html":{}}}],["loading",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["locale",{"_index":848,"title":{},"body":{"injectables/LocaleService.html":{}}}],["locale(value",{"_index":865,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localebase",{"_index":844,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localecurrent",{"_index":845,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localeservice",{"_index":842,"title":{"injectables/LocaleService.html":{}},"body":{"injectables/LocaleService.html":{},"coverage.html":{}}}],["localstorage.getitem('theme",{"_index":999,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('theme",{"_index":1003,"title":{},"body":{"injectables/ThemeService.html":{}}}],["m",{"_index":567,"title":{},"body":{"injectables/CalculateService.html":{}}}],["main",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["mainnet",{"_index":801,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["maskvalue",{"_index":419,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["maskvalue(value",{"_index":434,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["mat_dialog_data",{"_index":892,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["matamask",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["matdialog",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["matdialogmodule",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":884,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["math.floor(value",{"_index":575,"title":{},"body":{"injectables/CalculateService.html":{}}}],["math.pow(1000",{"_index":577,"title":{},"body":{"injectables/CalculateService.html":{}}}],["maxvaluechange",{"_index":423,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"components/MetamaskErrorComponent.html":{},"directives/MinMaxDirective.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["metamak",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["metamask",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["metamask.io",{"_index":973,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["metamask/metamask.service",{"_index":592,"title":{},"body":{"interfaces/Config.html":{}}}],["metamaskerrorcomponent",{"_index":160,"title":{"components/MetamaskErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metamaskservice",{"_index":54,"title":{"injectables/MetamaskService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["metamaskservice(this.config",{"_index":767,"title":{},"body":{"interfaces/Config.html":{}}}],["metamaskweb3",{"_index":593,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["method",{"_index":947,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"classes/AppPage.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["million",{"_index":570,"title":{},"body":{"injectables/CalculateService.html":{}}}],["minmaxdirective",{"_index":313,"title":{"directives/MinMaxDirective.html":{}},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"directives/MinMaxDirective.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{}}}],["minvaluechange",{"_index":424,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["miscellaneous",{"_index":1075,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modal",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["modal.button.two",{"_index":900,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["modal.component",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modal.component.html",{"_index":1016,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["modal.component.ts",{"_index":1015,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:11",{"_index":1021,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["modal.component.ts:12",{"_index":1018,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["modal.component.ts:14",{"_index":1020,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["modal.component.ts:18",{"_index":1019,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["modelvalue",{"_index":489,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["modelvalue.minus(this.appbignumber.min).tonumber",{"_index":501,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["modelvalue.tostring(10",{"_index":508,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["module",{"_index":332,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":334,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1116,"title":{},"body":{"index.html":{}}}],["msg",{"_index":952,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["multi",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nativewindow",{"_index":849,"title":{},"body":{"injectables/LocaleService.html":{}}}],["navigate",{"_index":1091,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":390,"title":{},"body":{"classes/AppPage.html":{}}}],["net",{"_index":583,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["net_version",{"_index":948,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["netversion",{"_index":902,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["network",{"_index":584,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["new",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["newobserver",{"_index":758,"title":{},"body":{"interfaces/Config.html":{}}}],["ng",{"_index":1088,"title":{},"body":{"index.html":{}}}],["ngcontrol",{"_index":437,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["ngmodel",{"_index":425,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["ngmodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":420,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["ngzone",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["noenable",{"_index":777,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["null",{"_index":869,"title":{},"body":{"injectables/LocaleService.html":{}}}],["number",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["number(result",{"_index":949,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["number,end",{"_index":666,"title":{},"body":{"interfaces/Config.html":{}}}],["number,id",{"_index":664,"title":{},"body":{"interfaces/Config.html":{}}}],["number,stakedavs",{"_index":667,"title":{},"body":{"interfaces/Config.html":{}}}],["number,start",{"_index":665,"title":{},"body":{"interfaces/Config.html":{}}}],["number,totalreward",{"_index":668,"title":{},"body":{"interfaces/Config.html":{}}}],["number,withdrawprogress",{"_index":669,"title":{},"body":{"interfaces/Config.html":{}}}],["obser.next(theme",{"_index":1006,"title":{},"body":{"injectables/ThemeService.html":{}}}],["observable",{"_index":587,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["observable((observer",{"_index":759,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["observer",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["observer.complete",{"_index":940,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["observer.error",{"_index":954,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["observer.error(errorparams",{"_index":943,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["observer.next",{"_index":939,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["observer.next(this.account",{"_index":804,"title":{},"body":{"interfaces/Config.html":{}}}],["observer.next(transaction",{"_index":746,"title":{},"body":{"interfaces/Config.html":{}}}],["olddecimal",{"_index":417,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["onauth",{"_index":935,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["onauth(observer",{"_index":966,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["onchangeaccount",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangeamount",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["onerror",{"_index":941,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["onerror(observer",{"_index":950,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["onesession.freezedrewardavstokens",{"_index":687,"title":{},"body":{"interfaces/Config.html":{}}}],["onesession.numdaysstake",{"_index":679,"title":{},"body":{"interfaces/Config.html":{}}}],["onesession.stakedavs",{"_index":685,"title":{},"body":{"interfaces/Config.html":{}}}],["onesession.stakeid",{"_index":681,"title":{},"body":{"interfaces/Config.html":{}}}],["oninit",{"_index":411,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["optional",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"miscellaneous/functions.html":{}}}],["originalvalue",{"_index":475,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"injectables/CalculateService.html":{}}}],["originalvalue.split('.')[1",{"_index":507,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["originalwriteval",{"_index":458,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["originalwriteval(this.maskvalue(value",{"_index":461,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["out",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1118,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1057,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1121,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"miscellaneous/functions.html":{}}}],["parseint(this.appbignumber.decimals",{"_index":464,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["path",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["percent",{"_index":645,"title":{},"body":{"interfaces/Config.html":{}}}],["pipe",{"_index":445,"title":{"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{}},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"coverage.html":{}}}],["pipes",{"_index":537,"title":{},"body":{"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":446,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{}}}],["please",{"_index":955,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["private",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["prod",{"_index":1105,"title":{},"body":{"index.html":{}}}],["production",{"_index":585,"title":{},"body":{"interfaces/Config.html":{},"index.html":{}}}],["project",{"_index":1081,"title":{},"body":{"index.html":{}}}],["promise",{"_index":392,"title":{},"body":{"classes/AppPage.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["promise((resolve",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["promise.all(promises",{"_index":770,"title":{},"body":{"interfaces/Config.html":{}}}],["promise.all(promises).then",{"_index":692,"title":{},"body":{"interfaces/Config.html":{}}}],["promise.all(promises).then((result",{"_index":798,"title":{},"body":{"interfaces/Config.html":{}}}],["promise.all(promises).then((results",{"_index":623,"title":{},"body":{"interfaces/Config.html":{}}}],["promise.all(promises).then((stake",{"_index":680,"title":{},"body":{"interfaces/Config.html":{}}}],["promise.all(sessionspromises).then((alldeposits",{"_index":689,"title":{},"body":{"interfaces/Config.html":{}}}],["promise.resolve(null",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["promises",{"_index":612,"title":{},"body":{"interfaces/Config.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"directives/BigNumberDirective.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["protractor",{"_index":394,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":563,"title":{},"body":{"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["providers",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["reactiveformsmodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["redirectto",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1120,"title":{},"body":{"index.html":{}}}],["registerculture",{"_index":846,"title":{},"body":{"injectables/LocaleService.html":{}}}],["registerculture(culture",{"_index":851,"title":{},"body":{"injectables/LocaleService.html":{}}}],["reject",{"_index":699,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["reject(err",{"_index":828,"title":{},"body":{"interfaces/Config.html":{}}}],["reload",{"_index":1094,"title":{},"body":{"index.html":{}}}],["replace(/\\.([0",{"_index":505,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["request",{"_index":946,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["require",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["required",{"_index":426,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["res",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["reset",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":713,"title":{},"body":{"interfaces/Config.html":{}}}],["resolve(1",{"_index":708,"title":{},"body":{"interfaces/Config.html":{}}}],["resolve(null",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["resolve(this.account",{"_index":826,"title":{},"body":{"interfaces/Config.html":{}}}],["resolve(true",{"_index":957,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["resolve(tx",{"_index":737,"title":{},"body":{"interfaces/Config.html":{}}}],["result",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.replace",{"_index":480,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["result.split(',').join('').replace",{"_index":476,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["result.split('.')[1",{"_index":486,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["result[1][this.settingsapp.production",{"_index":800,"title":{},"body":{"interfaces/Config.html":{}}}],["results",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["results.foreach((v",{"_index":624,"title":{},"body":{"interfaces/Config.html":{}}}],["retrive",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["return",{"_index":330,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["returns",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"classes/AppPage.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"miscellaneous/functions.html":{}}}],["rewards",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["root'},{'name",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["ropsten",{"_index":603,"title":{},"body":{"interfaces/Config.html":{}}}],["round",{"_index":528,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["routermodule",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":401,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["running",{"_index":1107,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":588,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1096,"title":{},"body":{"index.html":{}}}],["schema",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["scheme",{"_index":1001,"title":{},"body":{"injectables/ThemeService.html":{}}}],["select",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["selectday",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["selectday(day",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"components/MetamaskErrorComponent.html":{},"directives/MinMaxDirective.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["send",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["serve",{"_index":1089,"title":{},"body":{"index.html":{}}}],["server",{"_index":1087,"title":{},"body":{"index.html":{}}}],["service",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["service/appconfig",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["service/calculate/calculate.pipe",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["service/contract/contract.service",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["service/metamask/metamask.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["service/theme/theme.service",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["sessionid",{"_index":676,"title":{},"body":{"interfaces/Config.html":{}}}],["sessions",{"_index":673,"title":{},"body":{"interfaces/Config.html":{}}}],["sessionsids",{"_index":674,"title":{},"body":{"interfaces/Config.html":{}}}],["set",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{}}}],["setconfig",{"_index":325,"title":{},"body":{"injectables/AppConfig.html":{}}}],["setconfig(data",{"_index":328,"title":{},"body":{"injectables/AppConfig.html":{}}}],["setlocale(value",{"_index":859,"title":{},"body":{"injectables/LocaleService.html":{}}}],["settheme",{"_index":990,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(theme",{"_index":996,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settimeout",{"_index":466,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{}}}],["setting",{"_index":780,"title":{},"body":{"interfaces/Config.html":{}}}],["settingsapp",{"_index":602,"title":{},"body":{"interfaces/Config.html":{}}}],["seven",{"_index":644,"title":{},"body":{"interfaces/Config.html":{}}}],["seven_days",{"_index":650,"title":{},"body":{"interfaces/Config.html":{}}}],["sevendays",{"_index":622,"title":{},"body":{"interfaces/Config.html":{}}}],["short",{"_index":565,"title":{},"body":{"injectables/CalculateService.html":{}}}],["site",{"_index":605,"title":{},"body":{"interfaces/Config.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"index.html":{}}}],["span')).gettext",{"_index":398,"title":{},"body":{"classes/AppPage.html":{}}}],["spend",{"_index":696,"title":{},"body":{"interfaces/Config.html":{}}}],["src/.../app.module.ts",{"_index":1078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../locale.service.ts",{"_index":1077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:108",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:131",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:158",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:170",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:202",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:214",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:228",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/metamask/metamask",{"_index":878,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/transaction/transaction",{"_index":1014,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{},"coverage.html":{}}}],["src/app/directives/bignumber/bignumber.ts",{"_index":409,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"coverage.html":{}}}],["src/app/directives/bignumber/bignumber.ts:10",{"_index":438,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:11",{"_index":441,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:12",{"_index":440,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:13",{"_index":442,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:135",{"_index":435,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:144",{"_index":539,"title":{},"body":{"pipes/BigNumberFormat.html":{}}}],["src/app/directives/bignumber/bignumber.ts:15",{"_index":439,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:169",{"_index":541,"title":{},"body":{"pipes/BigNumberMin.html":{}}}],["src/app/directives/bignumber/bignumber.ts:17",{"_index":443,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:175",{"_index":540,"title":{},"body":{"pipes/BigNumberMax.html":{}}}],["src/app/directives/bignumber/bignumber.ts:19",{"_index":429,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:20",{"_index":433,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:22",{"_index":432,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:23",{"_index":431,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:24",{"_index":430,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:26",{"_index":428,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/bignumber/bignumber.ts:32",{"_index":436,"title":{},"body":{"directives/BigNumberDirective.html":{}}}],["src/app/directives/minmax/minmax.ts",{"_index":974,"title":{},"body":{"directives/MinMaxDirective.html":{},"coverage.html":{}}}],["src/app/directives/minmax/minmax.ts:11",{"_index":976,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["src/app/directives/minmax/minmax.ts:12",{"_index":977,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["src/app/directives/minmax/minmax.ts:13",{"_index":975,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["src/app/directives/minmax/minmax.ts:19",{"_index":978,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["src/app/directives/minmax/minmax.ts:8",{"_index":979,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["src/app/directives/minmax/minmax.ts:9",{"_index":980,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["src/app/service/appconfig.ts",{"_index":322,"title":{},"body":{"injectables/AppConfig.html":{},"coverage.html":{}}}],["src/app/service/appconfig.ts:13",{"_index":329,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/service/appconfig.ts:5",{"_index":326,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/service/appconfig.ts:9",{"_index":327,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/service/calculate/calculate.pipe.ts",{"_index":542,"title":{},"body":{"pipes/CalculatePipe.html":{},"coverage.html":{}}}],["src/app/service/calculate/calculate.pipe.ts:8",{"_index":545,"title":{},"body":{"pipes/CalculatePipe.html":{}}}],["src/app/service/calculate/calculate.service.ts",{"_index":551,"title":{},"body":{"injectables/CalculateService.html":{},"coverage.html":{}}}],["src/app/service/calculate/calculate.service.ts:11",{"_index":558,"title":{},"body":{"injectables/CalculateService.html":{}}}],["src/app/service/calculate/calculate.service.ts:25",{"_index":562,"title":{},"body":{"injectables/CalculateService.html":{}}}],["src/app/service/calculate/calculate.service.ts:7",{"_index":560,"title":{},"body":{"injectables/CalculateService.html":{}}}],["src/app/service/contract/constants.ts",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["src/app/service/contract/contract.service.ts",{"_index":582,"title":{},"body":{"interfaces/Config.html":{},"coverage.html":{}}}],["src/app/service/locale/locale.service.ts",{"_index":843,"title":{},"body":{"injectables/LocaleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/service/locale/locale.service.ts:10",{"_index":855,"title":{},"body":{"injectables/LocaleService.html":{}}}],["src/app/service/locale/locale.service.ts:12",{"_index":860,"title":{},"body":{"injectables/LocaleService.html":{}}}],["src/app/service/locale/locale.service.ts:15",{"_index":858,"title":{},"body":{"injectables/LocaleService.html":{}}}],["src/app/service/locale/locale.service.ts:18",{"_index":862,"title":{},"body":{"injectables/LocaleService.html":{}}}],["src/app/service/locale/locale.service.ts:20",{"_index":850,"title":{},"body":{"injectables/LocaleService.html":{}}}],["src/app/service/locale/locale.service.ts:36",{"_index":852,"title":{},"body":{"injectables/LocaleService.html":{}}}],["src/app/service/locale/locale.service.ts:9",{"_index":856,"title":{},"body":{"injectables/LocaleService.html":{}}}],["src/app/service/metamask/metamask.service.ts",{"_index":901,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["src/app/service/metamask/metamask.service.ts:16",{"_index":915,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/metamask/metamask.service.ts:17",{"_index":918,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/metamask/metamask.service.ts:18",{"_index":917,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/metamask/metamask.service.ts:20",{"_index":916,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/metamask/metamask.service.ts:21",{"_index":907,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/metamask/metamask.service.ts:37",{"_index":911,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/metamask/metamask.service.ts:41",{"_index":914,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/metamask/metamask.service.ts:45",{"_index":909,"title":{},"body":{"injectables/MetamaskService.html":{}}}],["src/app/service/theme/theme.service.ts",{"_index":986,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/service/theme/theme.service.ts:11",{"_index":995,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/service/theme/theme.service.ts:22",{"_index":997,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/service/theme/theme.service.ts:28",{"_index":994,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/service/theme/theme.service.ts:34",{"_index":998,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/service/theme/theme.service.ts:8",{"_index":992,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.ts",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["src/test.ts",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["stake",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["stake(resolve",{"_index":719,"title":{},"body":{"interfaces/Config.html":{}}}],["stake.end",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["stake.id",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["stake.numdaysstake",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["stake.stakedavs",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["stake.totalreward",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["stake.withdrawprogress",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["stake[0",{"_index":682,"title":{},"body":{"interfaces/Config.html":{}}}],["stake[1",{"_index":683,"title":{},"body":{"interfaces/Config.html":{}}}],["staked",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["stakedavs",{"_index":684,"title":{},"body":{"interfaces/Config.html":{}}}],["stakeend(sessionid",{"_index":724,"title":{},"body":{"interfaces/Config.html":{}}}],["stakelist",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["stakelist(this.account.address",{"_index":675,"title":{},"body":{"interfaces/Config.html":{}}}],["stakelistcount(this.account.address",{"_index":671,"title":{},"body":{"interfaces/Config.html":{}}}],["stakers",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["stakes",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["stakes[]:{index",{"_index":663,"title":{},"body":{"interfaces/Config.html":{}}}],["stakeslist",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["stakestart(amount",{"_index":714,"title":{},"body":{"interfaces/Config.html":{}}}],["staking",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["stakingaddress",{"_index":600,"title":{},"body":{"interfaces/Config.html":{}}}],["stakingcontract",{"_index":599,"title":{},"body":{"interfaces/Config.html":{}}}],["stakingprogress",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["stakings",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["start",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["started",{"_index":1079,"title":{"index.html":{}},"body":{}}],["startstake(amount",{"_index":711,"title":{},"body":{"interfaces/Config.html":{}}}],["startstake(this.amountvalue",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["statements",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":552,"title":{},"body":{"injectables/CalculateService.html":{},"interfaces/Config.html":{}}}],["stored",{"_index":1102,"title":{},"body":{"index.html":{}}}],["string",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["subscribeaccount",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribeaddress",{"_index":991,"title":{},"body":{"injectables/ThemeService.html":{}}}],["subscribers",{"_index":740,"title":{},"body":{"interfaces/Config.html":{}}}],["subscribes",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["substr",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{}}}],["successed",{"_index":754,"title":{},"body":{"interfaces/Config.html":{}}}],["successfully",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["suffixes",{"_index":572,"title":{},"body":{"injectables/CalculateService.html":{}}}],["suffixes[iterations",{"_index":579,"title":{},"body":{"injectables/CalculateService.html":{}}}],["suffixestemplate",{"_index":564,"title":{},"body":{"injectables/CalculateService.html":{}}}],["suffixestemplate[type",{"_index":573,"title":{},"body":{"injectables/CalculateService.html":{}}}],["support",{"_index":1122,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1123,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":873,"title":{},"body":{"injectables/LocaleService.html":{}}}],["table",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["test",{"_index":1110,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1109,"title":{},"body":{"index.html":{}}}],["text",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["th",{"_index":1010,"title":{},"body":{"injectables/ThemeService.html":{}}}],["th.themesubscribers",{"_index":1011,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{}}}],["themedark",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["themeprovider",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["themeservice",{"_index":51,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themesubscribers",{"_index":987,"title":{},"body":{"injectables/ThemeService.html":{}}}],["then((allowance",{"_index":702,"title":{},"body":{"interfaces/Config.html":{}}}],["then((balance",{"_index":729,"title":{},"body":{"interfaces/Config.html":{}}}],["then((config",{"_index":791,"title":{},"body":{"interfaces/Config.html":{}}}],["then((endday",{"_index":658,"title":{},"body":{"interfaces/Config.html":{}}}],["then((onesession",{"_index":677,"title":{},"body":{"interfaces/Config.html":{}}}],["then((res",{"_index":715,"title":{},"body":{"interfaces/Config.html":{}}}],["then((result",{"_index":795,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["then((sessions",{"_index":672,"title":{},"body":{"interfaces/Config.html":{}}}],["then(resolve",{"_index":717,"title":{},"body":{"interfaces/Config.html":{}}}],["this.account",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["this.account.address",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["this.account.address.length",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["this.account.address.substr(0",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["this.account.address.substr(this.account.address.length",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["this.account.balance",{"_index":816,"title":{},"body":{"interfaces/Config.html":{}}}],["this.allaccountsubscribers",{"_index":807,"title":{},"body":{"interfaces/Config.html":{}}}],["this.allaccountsubscribers.filter((a",{"_index":808,"title":{},"body":{"interfaces/Config.html":{}}}],["this.allaccountsubscribers.foreach((observer",{"_index":818,"title":{},"body":{"interfaces/Config.html":{}}}],["this.allaccountsubscribers.push(observer",{"_index":805,"title":{},"body":{"interfaces/Config.html":{}}}],["this.alltransactionsubscribers.foreach((observer",{"_index":745,"title":{},"body":{"interfaces/Config.html":{}}}],["this.alltransactionsubscribers.push(observer",{"_index":760,"title":{},"body":{"interfaces/Config.html":{}}}],["this.amountvalue",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appconfig",{"_index":1022,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["this.appconfig.network",{"_index":1025,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["this.appminmaxnumber.max",{"_index":983,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["this.apyselected",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["this.callallaccountssubscribers",{"_index":812,"title":{},"body":{"interfaces/Config.html":{}}}],["this.callalltransactionssubscribers(txinfo",{"_index":736,"title":{},"body":{"interfaces/Config.html":{}}}],["this.callsubscribers(theme",{"_index":1004,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.checktransaction(res",{"_index":716,"title":{},"body":{"interfaces/Config.html":{}}}],["this.checktx(tx",{"_index":738,"title":{},"body":{"interfaces/Config.html":{}}}],["this.config",{"_index":331,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.config.getconfig",{"_index":922,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.config.setconfig(this.settingsapp",{"_index":793,"title":{},"body":{"interfaces/Config.html":{}}}],["this.contractaddress",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contracts_params",{"_index":799,"title":{},"body":{"interfaces/Config.html":{}}}],["this.contracts_params.staking.address",{"_index":838,"title":{},"body":{"interfaces/Config.html":{}}}],["this.contracts_params.token.address",{"_index":841,"title":{},"body":{"interfaces/Config.html":{}}}],["this.contractservice",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.accountsubscribe().subscribe((account",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.getaccount().catch((err",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.getaccountstakes().then((res",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.getmaininfo().then((data",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.getstakingaddress",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.loadaccountinfo",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.transactionssubscribe().subscribe((transaction",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contractservice.updatebalance",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["this.control",{"_index":456,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.control.control.markastouched",{"_index":515,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.control.control.seterrors(errors",{"_index":516,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.control.control.seterrors(null",{"_index":512,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.control.control.setvalue(modelvalue",{"_index":510,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.control.control.setvalue(result",{"_index":985,"title":{},"body":{"directives/MinMaxDirective.html":{}}}],["this.control.control.setvalue(this.latestvalue",{"_index":467,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.control.valueaccessor.writevalue",{"_index":460,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.control.valueaccessor.writevalue.bind(this.control.valueaccessor",{"_index":459,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.control.valuechanges.subscribe((result",{"_index":474,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.currentdecimals",{"_index":462,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.currentdecimals)).tostring",{"_index":514,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.dayselect",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dayselected",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["this.decimalpart",{"_index":485,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.decimalpart.length",{"_index":494,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.decimalschange",{"_index":472,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.decimalschange.subscribe",{"_index":473,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.detectcolorscheme",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(metamaskerrorcomponent",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(transactionsuccessmodalcomponent",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialogref.close",{"_index":898,"title":{},"body":{"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["this.err",{"_index":894,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["this.ethlink",{"_index":1024,"title":{},"body":{"components/TransactionSuccessModalComponent.html":{}}}],["this.getallowance(amount).then",{"_index":718,"title":{},"body":{"interfaces/Config.html":{}}}],["this.getcontractsinfo(false",{"_index":769,"title":{},"body":{"interfaces/Config.html":{}}}],["this.getsevendays().then((value",{"_index":621,"title":{},"body":{"interfaces/Config.html":{}}}],["this.gettimestampfromcontract(onesession.startday",{"_index":678,"title":{},"body":{"interfaces/Config.html":{}}}],["this.gettokenbalance().then((balance",{"_index":815,"title":{},"body":{"interfaces/Config.html":{}}}],["this.gettokenbalance().then((value",{"_index":620,"title":{},"body":{"interfaces/Config.html":{}}}],["this.gettokenbalance(account.address",{"_index":825,"title":{},"body":{"interfaces/Config.html":{}}}],["this.gettotalavs().then((value",{"_index":613,"title":{},"body":{"interfaces/Config.html":{}}}],["this.gettotalstakedavs().then((value",{"_index":616,"title":{},"body":{"interfaces/Config.html":{}}}],["this.gettotalstakers().then((value",{"_index":618,"title":{},"body":{"interfaces/Config.html":{}}}],["this.httpservice",{"_index":787,"title":{},"body":{"interfaces/Config.html":{}}}],["this.initall().then",{"_index":765,"title":{},"body":{"interfaces/Config.html":{}}}],["this.initdata",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initializecontracts",{"_index":778,"title":{},"body":{"interfaces/Config.html":{}}}],["this.injector.get(ngcontrol",{"_index":457,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.latestvalue",{"_index":478,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.loading",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localebase",{"_index":871,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localecurrent",{"_index":866,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.maxvaluechange",{"_index":470,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.maxvaluechange.subscribe",{"_index":471,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.metamaskservice.getaccounts().subscribe((account",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metamaskweb3",{"_index":766,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.metamaskweb3.enable().catch",{"_index":969,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.metamaskweb3.getaccounts().subscribe((account",{"_index":768,"title":{},"body":{"interfaces/Config.html":{}}}],["this.metamaskweb3.getaccounts(noenable).subscribe",{"_index":824,"title":{},"body":{"interfaces/Config.html":{}}}],["this.metamaskweb3.getcontract(this.contracts_params.staking.abi",{"_index":837,"title":{},"body":{"interfaces/Config.html":{}}}],["this.metamaskweb3.getcontract(this.contracts_params.token.abi",{"_index":840,"title":{},"body":{"interfaces/Config.html":{}}}],["this.metamaskweb3.ismetamask",{"_index":958,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.metamaskweb3.on('accountschanged",{"_index":963,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.metamaskweb3.on('chainchanged",{"_index":959,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.metamaskweb3.selectedaddress",{"_index":968,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.metamaskweb3.web3.eth.gettransaction(tx.transactionhash).then((txinfo",{"_index":734,"title":{},"body":{"interfaces/Config.html":{}}}],["this.minvaluechange",{"_index":468,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.minvaluechange.subscribe",{"_index":469,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["this.nativewindow.navigator.language",{"_index":868,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.net",{"_index":926,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.netversion",{"_index":923,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.ngzone.run",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onchangeaccount.emit",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["this.providers",{"_index":928,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.providers.metamask",{"_index":929,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.registerculture(this.localebase",{"_index":872,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.required",{"_index":492,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"directives/MinMaxDirective.html":{}}}],["this.selectday(day",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.settingsapp",{"_index":792,"title":{},"body":{"interfaces/Config.html":{}}}],["this.settingsapp.network",{"_index":802,"title":{},"body":{"interfaces/Config.html":{}}}],["this.stake",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stakelist",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stakeslist",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stakingaddress",{"_index":701,"title":{},"body":{"interfaces/Config.html":{}}}],["this.stakingcontract",{"_index":836,"title":{},"body":{"interfaces/Config.html":{}}}],["this.stakingcontract.methods",{"_index":638,"title":{},"body":{"interfaces/Config.html":{}}}],["this.stakingprogress",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subscribeaccount",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.theme",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themedark",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themeprovider.gettheme",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themeprovider.settheme(this.theme",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themeprovider.subscribeaddress().subscribe((theme",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themesubscribers",{"_index":1009,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubscribers.foreach((obser",{"_index":1005,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubscribers.push(observer",{"_index":1007,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.title",{"_index":896,"title":{},"body":{"components/MetamaskErrorComponent.html":{}}}],["this.togglecolorscheme",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tokenaddress",{"_index":833,"title":{},"body":{"interfaces/Config.html":{}}}],["this.tokencontract",{"_index":839,"title":{},"body":{"interfaces/Config.html":{}}}],["this.tokencontract.methods",{"_index":631,"title":{},"body":{"interfaces/Config.html":{}}}],["this.totaldata",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["this.unstake(stake",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["this.updateuseraccount(account",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["this.useraddress",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["this.web3",{"_index":936,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.web3.eth.contract(abi",{"_index":934,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.web3.eth.getbalance(address",{"_index":933,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.web3.setprovider(this.providers.metamask",{"_index":937,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["this.withendpoint",{"_index":481,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["thousand",{"_index":569,"title":{},"body":{"injectables/CalculateService.html":{}}}],["time",{"_index":655,"title":{},"body":{"interfaces/Config.html":{}}}],["timestamp",{"_index":652,"title":{},"body":{"interfaces/Config.html":{}}}],["title",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["toggle",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["togglecolorscheme",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":725,"title":{},"body":{"interfaces/Config.html":{}}}],["tokenaddress",{"_index":598,"title":{},"body":{"interfaces/Config.html":{}}}],["tokencontract",{"_index":597,"title":{},"body":{"interfaces/Config.html":{}}}],["topromise",{"_index":790,"title":{},"body":{"interfaces/Config.html":{}}}],["tostring",{"_index":504,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["total",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["totalavs",{"_index":615,"title":{},"body":{"interfaces/Config.html":{}}}],["totaldata",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["totaldata.balance",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["totaldata.sevendays",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["totaldata.totalavs",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["totaldata.totalstakedavs",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["totaldata.totalstakers",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["totalreward",{"_index":686,"title":{},"body":{"interfaces/Config.html":{}}}],["totalstakedavs",{"_index":617,"title":{},"body":{"interfaces/Config.html":{}}}],["totalstakers",{"_index":619,"title":{},"body":{"interfaces/Config.html":{}}}],["totalsupply",{"_index":632,"title":{},"body":{"interfaces/Config.html":{}}}],["transaction",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["transaction.hash",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["transactions",{"_index":750,"title":{},"body":{"interfaces/Config.html":{}}}],["transactionssubscribe",{"_index":757,"title":{},"body":{"interfaces/Config.html":{}}}],["transactionsuccessmodalcomponent",{"_index":156,"title":{"components/TransactionSuccessModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["transform",{"_index":538,"title":{},"body":{"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{}}}],["transform(value",{"_index":524,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{}}}],["transform(values",{"_index":533,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["trigger",{"_index":741,"title":{},"body":{"interfaces/Config.html":{}}}],["triggered",{"_index":762,"title":{},"body":{"interfaces/Config.html":{}}}],["true",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{},"directives/MinMaxDirective.html":{}}}],["try",{"_index":867,"title":{},"body":{"injectables/LocaleService.html":{}}}],["tslib",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["txinfo.blocknumber",{"_index":735,"title":{},"body":{"interfaces/Config.html":{}}}],["type",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"directives/BigNumberDirective.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["typeof",{"_index":931,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["undefined",{"_index":870,"title":{},"body":{"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["unit",{"_index":1108,"title":{},"body":{"index.html":{}}}],["unstake",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["unstake(sessionid",{"_index":723,"title":{},"body":{"interfaces/Config.html":{}}}],["unstake(stake",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["unstake(stake.index",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["unsubscribe",{"_index":806,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"injectables/ThemeService.html":{},"interfaces/Window.html":{}}}],["update",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Config.html":{}}}],["updatebalance",{"_index":814,"title":{},"body":{"interfaces/Config.html":{}}}],["updateuseraccount",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["updateuseraccount(account",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["use",{"_index":1098,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["useraddress",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["ustake",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["v.value",{"_index":626,"title":{},"body":{"interfaces/Config.html":{}}}],["value",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"injectables/ThemeService.html":{}}}],["values",{"_index":535,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{},"interfaces/Config.html":{}}}],["values[v.key",{"_index":625,"title":{},"body":{"interfaces/Config.html":{}}}],["var",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/MetamaskErrorComponent.html":{},"components/TransactionSuccessModalComponent.html":{}}}],["variable",{"_index":752,"title":{},"body":{"interfaces/Config.html":{},"coverage.html":{}}}],["verified",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["version",{"_index":1085,"title":{},"body":{"index.html":{}}}],["via",{"_index":782,"title":{},"body":{"interfaces/Config.html":{},"index.html":{}}}],["visiblevalue",{"_index":517,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["visiblevalue.toformat(math.min(this.decimalpart",{"_index":520,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["void",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"directives/BigNumberDirective.html":{},"interfaces/Config.html":{},"injectables/LocaleService.html":{},"components/MetamaskErrorComponent.html":{},"injectables/MetamaskService.html":{},"directives/MinMaxDirective.html":{},"injectables/ThemeService.html":{},"components/TransactionSuccessModalComponent.html":{},"interfaces/Window.html":{}}}],["wallet",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["web3",{"_index":590,"title":{},"body":{"interfaces/Config.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["web3(this.providers.metamask",{"_index":938,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["web3.givenprovider",{"_index":930,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["white",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{}}}],["width",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["window",{"_index":864,"title":{"interfaces/Window.html":{}},"body":{"injectables/LocaleService.html":{},"injectables/MetamaskService.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["window.ethereum",{"_index":932,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["window.location.reload",{"_index":961,"title":{},"body":{"injectables/MetamaskService.html":{},"interfaces/Window.html":{}}}],["window.matchmedia('(prefers",{"_index":1000,"title":{},"body":{"injectables/ThemeService.html":{}}}],["withdrawprogress",{"_index":688,"title":{},"body":{"interfaces/Config.html":{}}}],["withendpoint",{"_index":418,"title":{},"body":{"directives/BigNumberDirective.html":{},"pipes/BigNumberFormat.html":{},"pipes/BigNumberMax.html":{},"pipes/BigNumberMin.html":{}}}],["yes",{"_index":546,"title":{},"body":{"pipes/CalculatePipe.html":{},"injectables/CalculateService.html":{},"injectables/MetamaskService.html":{}}}],["zone.js",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                account\n                            \n                            \n                                    Public\n                                amountValue\n                            \n                            \n                                    Public\n                                apySelected\n                            \n                            \n                                    Public\n                                contractAddress\n                            \n                            \n                                    Public\n                                days\n                            \n                            \n                                    Public\n                                daySelect\n                            \n                            \n                                    Public\n                                daySelected\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                onChangeAccount\n                            \n                            \n                                    Public\n                                stakeslist\n                            \n                            \n                                    Public\n                                stakingProgress\n                            \n                            \n                                    Public\n                                theme\n                            \n                            \n                                    Public\n                                themeDark\n                            \n                            \n                                    Public\n                                totalData\n                            \n                            \n                                    Public\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                detectColorScheme\n                            \n                            \n                                    Public\n                                initData\n                            \n                            \n                                    Public\n                                selectDay\n                            \n                            \n                                    Public\n                                stake\n                            \n                            \n                                    Public\n                                stakeList\n                            \n                            \n                                    Public\n                                subscribeAccount\n                            \n                            \n                                    Public\n                                toggleColorScheme\n                            \n                            \n                                    Public\n                                unstake\n                            \n                            \n                                    Private\n                                updateUserAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeProvider: ThemeService, contractService: ContractService, ngZone: NgZone, metamaskService: MetamaskService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeProvider\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contractService\n                                                  \n                                                        \n                                                                        ContractService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metamaskService\n                                                  \n                                                        \n                                                                        MetamaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            detectColorScheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectColorScheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:214\n                \n            \n\n\n            \n                \n                    Detect Color Schema\n\n\n                    \n                        Example :\n                        \n                            this.detectColorScheme();\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:81\n                \n            \n\n\n            \n                \n                    Get Main Data\n\n\n                    \n                        Example :\n                        \n                            this.initData();\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectDay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectDay(day: number, apy: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:158\n                \n            \n\n\n            \n                \n                    Select Day\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    day\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apy\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.selectDay(day, apy);\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stake\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stake()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:108\n                \n            \n\n\n            \n                \n                    Start Stake Coins\n\n\n                    \n                        Example :\n                        \n                            this.stake();\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stakeList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stakeList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:96\n                \n            \n\n\n            \n                \n                    Get List of Stakes\n\n\n                    \n                        Example :\n                        \n                            this.stakeList();\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribeAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:170\n                \n            \n\n\n            \n                \n                    Subscribe Account\n\n\n                    \n                        Example :\n                        \n                            this.subscribeAccount();\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleColorScheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleColorScheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:228\n                \n            \n\n\n            \n                \n                    Toggle Color Schema\n\n\n                    \n                        Example :\n                        \n                            this.toggleColorScheme();\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unstake\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unstake(stake: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:131\n                \n            \n\n\n            \n                \n                    Unstake Coins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stake\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.unstake(stake);\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateUserAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserAccount(account: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:202\n                \n            \n\n\n            \n                \n                    Update User Account\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.updateUserAccount(account);\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amountValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apySelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            contractAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            days\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { value: 15, apy: 10 },\n    { value: 30, apy: 11 },\n    { value: 45, apy: 12.1 },\n    { value: 60, apy: 13.31 },\n    { value: 75, apy: 14.641 },\n    { value: 90, apy: 16.1051 },\n    { value: 105, apy: 17.71561 },\n    { value: 120, apy: 19.487171 },\n    { value: 135, apy: 21.4358881 },\n    { value: 150, apy: 23.57947691 },\n    { value: 165, apy: 25.9354246 },\n    { value: 180, apy: 28.53116706 },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            daySelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            daySelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChangeAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stakeslist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stakingProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'white'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            themeDark\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TransactionSuccessModalComponent } from './components/transaction/transaction-success-modal.component';\nimport { MetamaskErrorComponent } from './components/metamask/metamask-error.component';\n\nimport { ThemeService } from './service/theme/theme.service';\nimport { ContractService } from './service/contract/contract.service';\nimport { MetamaskService } from './service/metamask/metamask.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public theme = 'white';\n  public themeDark = false;\n\n  public loading = true;\n\n  public account: any;\n  public userAddress = '';\n  public onChangeAccount: EventEmitter = new EventEmitter();\n\n  public amountValue: any;\n\n  public contractAddress: string;\n  public totalData: any;\n  public stakeslist: any;\n  public stakingProgress = false;\n\n  public daySelect = false;\n  public daySelected = 15;\n  public apySelected = 10;\n  public days = [\n    { value: 15, apy: 10 },\n    { value: 30, apy: 11 },\n    { value: 45, apy: 12.1 },\n    { value: 60, apy: 13.31 },\n    { value: 75, apy: 14.641 },\n    { value: 90, apy: 16.1051 },\n    { value: 105, apy: 17.71561 },\n    { value: 120, apy: 19.487171 },\n    { value: 135, apy: 21.4358881 },\n    { value: 150, apy: 23.57947691 },\n    { value: 165, apy: 25.9354246 },\n    { value: 180, apy: 28.53116706 },\n  ];\n\n  constructor(private themeProvider: ThemeService, private contractService: ContractService, private ngZone: NgZone, private metamaskService: MetamaskService, public dialog: MatDialog) {\n    this.detectColorScheme();\n    this.contractService\n      .getAccount()\n      .then(() => {\n        this.subscribeAccount();\n        this.contractAddress = this.contractService.getStakingAddress();\n        this.contractService.transactionsSubscribe().subscribe((transaction: any) => {\n          if (transaction) {\n            this.dialog.open(TransactionSuccessModalComponent, {\n              data: { title: 'Transaction', text: 'Completed successfully ', tx: transaction.hash },\n              width: '440px',\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        this.dialog.open(MetamaskErrorComponent, {\n          data: err,\n          width: '400px',\n        });\n      });\n  }\n\n  /**\n   * Get Main Data\n   * @description Get from contract a list of data.\n   * @example\n   * this.initData();\n   */\n  public initData(): void {\n    this.contractService.getMainInfo().then((data) => {\n      console.log('init', data);\n      this.totalData = data;\n      this.stakeList();\n      this.loading = false;\n    });\n  }\n\n  /**\n   * Get List of Stakes\n   * @description Retrive from contract a list of accout stakes.\n   * @example\n   * this.stakeList();\n   */\n  public stakeList(): void {\n    this.contractService.getAccountStakes().then((res) => {\n      this.stakeslist = res;\n    });\n  }\n\n  /**\n   * Start Stake Coins\n   * @description Send coins to contract stake.\n   * @example\n   * this.stake();\n   */\n  public stake(): void {\n    this.stakingProgress = true;\n    this.contractService\n      .startStake(this.amountValue, this.daySelected)\n      .then(() => {\n        this.stakingProgress = false;\n        this.amountValue = 0;\n      })\n      .catch(() => {\n        this.stakingProgress = false;\n      })\n      .finally(() => {\n        this.contractService.updateBalance();\n        this.stakeList();\n      });\n  }\n\n  /**\n   * Unstake Coins\n   * @description Toggle ustake coins from contract.\n   * @example\n   * this.unstake(stake);\n   */\n  public unstake(stake: any): void {\n    stake.withdrawProgress = true;\n    this.contractService\n      .unstake(stake.index, stake.id)\n      .then(() => {\n        this.stakeList();\n        stake.withdrawProgress = false;\n      })\n      .catch(() => {\n        stake.withdrawProgress = false;\n      })\n      .finally(() => {\n        this.contractService.updateBalance();\n        stake.withdrawProgress = false;\n      });\n  }\n\n  // public onChangeAmount(): any {\n  //   console.log(this.amountValue);\n  // }\n\n  /**\n   * Select Day\n   * @description Clicked on dropdown list item and set day and apy.\n   * @example\n   * this.selectDay(day, apy);\n   */\n  public selectDay(day: number, apy: number): void {\n    this.daySelect = false;\n    this.daySelected = day;\n    this.apySelected = apy;\n  }\n\n  /**\n   * Subscribe Account\n   * @description Create subscribes on change account in metamask and contract service. Also catch error from metamak on start application.\n   * @example\n   * this.subscribeAccount();\n   */\n  public subscribeAccount(): void {\n    // subscribe on matamask account observer\n    this.metamaskService.getAccounts().subscribe((account) => {\n      this.ngZone.run(() => {\n        this.onChangeAccount.emit();\n        if (account && (!this.account || this.account.address !== account.address)) {\n          this.contractService.loadAccountInfo();\n          this.updateUserAccount(account);\n        }\n      });\n    });\n\n    // subscribe on contract account observer\n    this.contractService.accountSubscribe().subscribe((account) => {\n      this.updateUserAccount(account);\n    });\n\n    // catch on start metamask errors\n    this.contractService.getAccount().catch((err) => {\n      this.dialog.open(MetamaskErrorComponent, {\n        data: err,\n        width: '400px',\n      });\n    });\n  }\n\n  /**\n   * Update User Account\n   * @description Update user account data and set substr account address.\n   * @example\n   * this.updateUserAccount(account);\n   */\n  private updateUserAccount(account: any): void {\n    this.initData();\n    this.account = account;\n    this.userAddress = this.account.address.substr(0, 5) + '...' + this.account.address.substr(this.account.address.length - 3, this.account.address.length);\n  }\n\n  /**\n   * Detect Color Schema\n   * @description On start application this function will get color theme value from ThemeService and set it to id in html tag.\n   * @example\n   * this.detectColorScheme();\n   */\n  private detectColorScheme(): void {\n    this.theme = this.themeProvider.getTheme();\n    this.theme = 'white';\n    document.documentElement.setAttribute('id', this.theme === 'dark' ? 'dark' : 'white');\n    this.themeDark = this.theme === 'dark';\n    this.themeProvider.subscribeAddress().subscribe((theme) => (this.theme = theme));\n  }\n\n  /**\n   * Toggle Color Schema\n   * @description Change color schema from html button and run detect theme function.\n   * @example\n   * this.toggleColorScheme();\n   */\n  public toggleColorScheme(): void {\n    this.themeProvider.setTheme(this.theme === 'dark' ? 'white' : 'dark');\n    this.detectColorScheme();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ userAddress }}\n    \n    Connect MetaMask\n  \n\n\n\n  \n    \n      \n        Total AVS Stakers\n        {{ loading ? '--' : totalData.totalStakers }}\n      \n      \n        Total Staked AVS\n        {{ loading ? '--' : (totalData.totalStakedAVS | bigNumberFormat: 18:true:false:6) }}\n      \n      \n        Total AVS\n        {{ loading ? '--' : (totalData.totalAvs | bigNumberFormat: 18:true:false:1) }}\n      \n    \n    \n      \n        7 Days Average Staking APY\n        {{ loading ? '--' : (totalData.sevenDays+'%') }} -->\n        {{ loading ? '--' : '37%' }}\n        \n        Staking Analytics\n      \n      \n        Verified AVS Staking Contract\n        {{ contractAddress || '--' }}\n      \n    \n    \n      \n        Your Staked AVS\n        --\n      \n      \n        Your AVS Wallet\n        --\n      \n    \n\n    \n      \n        Stake AVS\n        \n          Your AVS Balance\n          {{ loading ? '--' : (totalData.balance | bigNumberFormat: 18:true:false:18) }}\n        \n      \n      \n        \n          \n            Amount of AVS to Stake\n            \n          \n          \n            DAYS APY\n            \n              \n                {{ daySelected }}\n                APY {{ apySelected }}\n              \n              \n                \n                  \n                    {{ day.value }}\n                    APY {{ day.apy }}\n                  \n                \n              \n            \n          \n        \n        \n          \n            \n              \n              \n              \n              \n            \n          \n          Stake\n        \n      \n    \n\n    Connect MetaMask\n  \n\n\n\n  \n    \n      Stakings\n      2% Unstake Fee\n    \n    \n      You don't have stakes\n    \n    \n      \n        \n          \n            Start Date\n            End Date\n            Staked AVS\n            \n              Rewards\n              \n              Earned\n            \n            Total rewards\n            \n          \n        \n        \n          \n            \n              {{ stake.end | date }}\n            \n            \n              {{ stake.stakedAVS | bigNumberFormat: 18:true:false:18 }}\n            \n            \n              {{ stake.numDaysStake }}\n            \n            \n              {{ stake.totalReward | bigNumberFormat: 18:true:false:6 }}\n            \n            \n              \n                \n                  \n                    \n                    \n                    \n                    \n                  \n                \n                Unstake\n              \n            \n          \n          \n            \n              04.06.2022\n            \n            100,000\n            25\n            100,000\n            \n              Unstake\n            \n           -->\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ userAddress }}        Connect MetaMask                      Total AVS Stakers        {{ loading ? \\'--\\' : totalData.totalStakers }}                    Total Staked AVS        {{ loading ? \\'--\\' : (totalData.totalStakedAVS | bigNumberFormat: 18:true:false:6) }}                    Total AVS        {{ loading ? \\'--\\' : (totalData.totalAvs | bigNumberFormat: 18:true:false:1) }}                            7 Days Average Staking APY        {{ loading ? \\'--\\' : (totalData.sevenDays+\\'%\\') }} -->        {{ loading ? \\'--\\' : \\'37%\\' }}                Staking Analytics                    Verified AVS Staking Contract        {{ contractAddress || \\'--\\' }}                            Your Staked AVS        --                    Your AVS Wallet        --                            Stake AVS                  Your AVS Balance          {{ loading ? \\'--\\' : (totalData.balance | bigNumberFormat: 18:true:false:18) }}                                                  Amount of AVS to Stake                                            DAYS APY                                          {{ daySelected }}                APY {{ apySelected }}                                                                                  {{ day.value }}                    APY {{ day.apy }}                                                                                                                                                                                                    Stake                      Connect MetaMask              Stakings      2% Unstake Fee              You don\\'t have stakes                                            Start Date            End Date            Staked AVS                          Rewards                            Earned                        Total rewards                                                                          {{ stake.end | date }}                                      {{ stake.stakedAVS | bigNumberFormat: 18:true:false:18 }}                                      {{ stake.numDaysStake }}                                      {{ stake.totalReward | bigNumberFormat: 18:true:false:6 }}                                                                                                                                                                                                          Unstake                                                                        04.06.2022                        100,000            25            100,000                          Unstake                       -->                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MetamaskErrorComponent', 'selector': 'app-metamask-error'},{'name': 'TransactionSuccessModalComponent', 'selector': 'app-transaction-success-modal'}];\n    var DIRECTIVES = [{'name': 'BigNumberDirective', 'selector': '[appBigNumber]'},{'name': 'MinMaxDirective', 'selector': '[appMinMaxNumber]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfig.html":{"url":"injectables/AppConfig.html","title":"injectable - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/appconfig.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getConfig\n                            \n                            \n                                    Public\n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/appconfig.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/appconfig.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfig(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/appconfig.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/appconfig.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AppConfig {\n  config: any = {};\n\n  constructor() {}\n\n  public getConfig(): any {\n    return this.config;\n  }\n\n  public setConfig(data: any): any {\n    this.config = data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBigNumberDirective\n\nBigNumberDirective\n\nAppModule -->\n\nBigNumberDirective->AppModule\n\n\n\n\n\nBigNumberFormat\n\nBigNumberFormat\n\nAppModule -->\n\nBigNumberFormat->AppModule\n\n\n\n\n\nBigNumberMax\n\nBigNumberMax\n\nAppModule -->\n\nBigNumberMax->AppModule\n\n\n\n\n\nBigNumberMin\n\nBigNumberMin\n\nAppModule -->\n\nBigNumberMin->AppModule\n\n\n\n\n\nCalculatePipe\n\nCalculatePipe\n\nAppModule -->\n\nCalculatePipe->AppModule\n\n\n\n\n\nMetamaskErrorComponent\n\nMetamaskErrorComponent\n\nAppModule -->\n\nMetamaskErrorComponent->AppModule\n\n\n\n\n\nTransactionSuccessModalComponent\n\nTransactionSuccessModalComponent\n\nAppModule -->\n\nTransactionSuccessModalComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppConfig\n\nAppConfig\n\nAppModule -->\n\nAppConfig->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BigNumberDirective\n                        \n                        \n                            BigNumberFormat\n                        \n                        \n                            BigNumberMax\n                        \n                        \n                            BigNumberMin\n                        \n                        \n                            CalculatePipe\n                        \n                        \n                            MetamaskErrorComponent\n                        \n                        \n                            TransactionSuccessModalComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MetamaskErrorComponent\n                        \n                        \n                            TransactionSuccessModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppConfig\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppConfig } from './service/appconfig';\nimport { ContractService } from './service/contract/contract.service';\nimport { CalculatePipe } from './service/calculate/calculate.pipe';\nimport { BigNumberDirective, BigNumberFormat, BigNumberMax, BigNumberMin } from './directives/bignumber/bignumber';\n\nimport { AppComponent } from './app.component';\nimport { MetamaskErrorComponent } from './components/metamask/metamask-error.component';\nimport { TransactionSuccessModalComponent } from './components/transaction/transaction-success-modal.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nexport function initializeApp(injector: Injector): any {\n  return () =>\n    new Promise((resolve: any) => {\n      const contractService = injector.get(ContractService, Promise.resolve(null));\n      contractService.getStaticInfo().then(() => {\n        resolve(null);\n      });\n    });\n}\n@NgModule({\n  entryComponents: [TransactionSuccessModalComponent, MetamaskErrorComponent],\n  declarations: [AppComponent, TransactionSuccessModalComponent, MetamaskErrorComponent, CalculatePipe, BigNumberFormat, BigNumberMax, BigNumberMin, BigNumberDirective],\n  imports: [AppRoutingModule, BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule, BrowserAnimationsModule, MatDialogModule],\n  providers: [\n    AppConfig,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '/',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BigNumberDirective.html":{"url":"directives/BigNumberDirective.html","title":"directive - BigNumberDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  BigNumberDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/bignumber/bignumber.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appBigNumber]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                control\n                            \n                            \n                                    Private\n                                currentDecimals\n                            \n                            \n                                    Private\n                                decimalPart\n                            \n                            \n                                    Private\n                                latestValue\n                            \n                            \n                                    Private\n                                oldDecimal\n                            \n                            \n                                    Private\n                                withEndPoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                maskValue\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appBigNumber\n                            \n                            \n                                decimalsChange\n                            \n                            \n                                maxValueChange\n                            \n                            \n                                minValueChange\n                            \n                            \n                                ngModel\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/bignumber/bignumber.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appBigNumber\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        decimalsChange\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxValueChange\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minValueChange\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:26\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            maskValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    maskValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/bignumber/bignumber.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/bignumber/bignumber.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDecimals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            decimalPart\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latestValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldDecimal\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            withEndPoint\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/bignumber/bignumber.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Injector, Input, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport BigNumber from 'bignumber.js';\nimport { Console } from 'console';\n\n@Directive({\n  selector: '[appBigNumber]',\n})\nexport class BigNumberDirective implements OnInit {\n  private control: NgControl;\n  private latestValue;\n  private decimalPart;\n  private oldDecimal;\n\n  private currentDecimals: number;\n\n  private withEndPoint;\n\n  @Input('appBigNumber') appBigNumber;\n  @Input('ngModel') ngModel;\n\n  @Input('minValueChange') minValueChange;\n  @Input('maxValueChange') maxValueChange;\n  @Input('decimalsChange') decimalsChange;\n\n  @Input('required') required;\n\n  constructor(private injector: Injector) {\n    this.control = this.injector.get(NgControl);\n  }\n\n  ngOnInit() {\n    const originalWriteVal = this.control.valueAccessor.writeValue.bind(this.control.valueAccessor);\n    this.control.valueAccessor.writeValue = (value) => originalWriteVal(this.maskValue(value));\n\n    this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n\n    const checkValue = () => {\n      this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n      setTimeout(() => {\n        this.control.control.setValue(this.latestValue);\n      });\n    };\n\n    if (this.minValueChange) {\n      this.minValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.maxValueChange) {\n      this.maxValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.decimalsChange) {\n      this.decimalsChange.subscribe(() => {\n        checkValue();\n      });\n    }\n\n    this.control.valueChanges.subscribe((result: string) => {\n      result = result || '';\n\n      let originalValue = result.split(',').join('').replace(/\\.$/, '');\n\n      if (new BigNumber(originalValue).isNaN()) {\n        originalValue = result !== '' ? this.latestValue : '';\n      } else {\n        const fixedResult = result.replace(/\\.+$/, '.');\n        this.withEndPoint = fixedResult.indexOf('.') === fixedResult.length - 1;\n        this.decimalPart = originalValue ? result.split('.')[1] : '';\n      }\n\n      let bigNumberValue = new BigNumber(originalValue);\n\n      const errors: any = {};\n\n      let modelValue;\n\n      if (!originalValue || bigNumberValue.isNaN()) {\n        this.latestValue = '';\n        if (originalValue) {\n          errors.pattern = true;\n        } else if (this.required) {\n          errors.required = true;\n        }\n        modelValue = '';\n      } else {\n        if (this.decimalPart && this.decimalPart.length > this.currentDecimals) {\n          bigNumberValue = bigNumberValue.dp(this.currentDecimals);\n        }\n\n        modelValue = bigNumberValue.times(Math.pow(10, this.currentDecimals));\n\n        if (bigNumberValue.div(Math.pow(2, 256) - 1).toNumber() > 1) {\n          errors.totalMaximum = true;\n        }\n\n        if (modelValue.minus(this.appBigNumber.min).toNumber() = 0) {\n          modelValue = new BigNumber(this.appBigNumber.max);\n          originalValue = modelValue\n            .div(Math.pow(10, this.currentDecimals))\n            .toString()\n            .replace(/\\.([0-9]+)[0]+$/, '$1');\n          this.decimalPart = originalValue.split('.')[1];\n        }\n      }\n\n      modelValue = modelValue.toString(10);\n      if (JSON.stringify(errors) === '{}') {\n        this.latestValue = originalValue;\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(null);\n      } else {\n        if (this.latestValue) {\n          modelValue = new BigNumber(this.latestValue).times(Math.pow(10, this.currentDecimals)).toString();\n        }\n        if (modelValue) {\n          this.control.control.markAsTouched();\n        }\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(errors);\n      }\n    });\n  }\n\n  private maskValue(value) {\n    const visibleValue = this.latestValue ? new BigNumber(this.latestValue) : value ? new BigNumber(value).div(Math.pow(10, this.currentDecimals)) : '';\n\n    return visibleValue ? visibleValue.toFormat(Math.min(this.decimalPart ? this.decimalPart.length : 0, this.currentDecimals || 0), 1, { groupSeparator: ',', groupSize: 3, decimalSeparator: '.' }).toString() + (this.withEndPoint ? '.' : '') : '';\n  }\n}\n\n@Pipe({ name: 'bigNumberFormat' })\nexport class BigNumberFormat implements PipeTransform {\n  transform(value, decimals, format, asBN, round) {\n    const formatNumberParams = {\n      groupSeparator: ',',\n      groupSize: 3,\n      decimalSeparator: '.',\n    };\n\n    const bigNumberValue = new BigNumber(value).div(Math.pow(10, decimals));\n\n    if (bigNumberValue.isNaN()) {\n      return value;\n    }\n\n    if (format) {\n      return round || decimals || decimals === 0 ? bigNumberValue.dp(round || decimals).toFormat(formatNumberParams) : '';\n    } else if (!asBN) {\n      return bigNumberValue.toString(10);\n    } else {\n      return bigNumberValue;\n    }\n  }\n}\n\n@Pipe({ name: 'bigNumberMin' })\nexport class BigNumberMin implements PipeTransform {\n  transform(values) {\n    return BigNumber.min.apply(null, values);\n  }\n}\n@Pipe({ name: 'bigNumberMax' })\nexport class BigNumberMax implements PipeTransform {\n  transform(values) {\n    return BigNumber.max.apply(null, values);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BigNumberFormat.html":{"url":"pipes/BigNumberFormat.html","title":"pipe - BigNumberFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BigNumberFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/directives/bignumber/bignumber.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bigNumberFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value, decimals, format, asBN, round)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/bignumber/bignumber.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    decimals\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    asBN\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    round\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Directive, Injector, Input, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport BigNumber from 'bignumber.js';\nimport { Console } from 'console';\n\n@Directive({\n  selector: '[appBigNumber]',\n})\nexport class BigNumberDirective implements OnInit {\n  private control: NgControl;\n  private latestValue;\n  private decimalPart;\n  private oldDecimal;\n\n  private currentDecimals: number;\n\n  private withEndPoint;\n\n  @Input('appBigNumber') appBigNumber;\n  @Input('ngModel') ngModel;\n\n  @Input('minValueChange') minValueChange;\n  @Input('maxValueChange') maxValueChange;\n  @Input('decimalsChange') decimalsChange;\n\n  @Input('required') required;\n\n  constructor(private injector: Injector) {\n    this.control = this.injector.get(NgControl);\n  }\n\n  ngOnInit() {\n    const originalWriteVal = this.control.valueAccessor.writeValue.bind(this.control.valueAccessor);\n    this.control.valueAccessor.writeValue = (value) => originalWriteVal(this.maskValue(value));\n\n    this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n\n    const checkValue = () => {\n      this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n      setTimeout(() => {\n        this.control.control.setValue(this.latestValue);\n      });\n    };\n\n    if (this.minValueChange) {\n      this.minValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.maxValueChange) {\n      this.maxValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.decimalsChange) {\n      this.decimalsChange.subscribe(() => {\n        checkValue();\n      });\n    }\n\n    this.control.valueChanges.subscribe((result: string) => {\n      result = result || '';\n\n      let originalValue = result.split(',').join('').replace(/\\.$/, '');\n\n      if (new BigNumber(originalValue).isNaN()) {\n        originalValue = result !== '' ? this.latestValue : '';\n      } else {\n        const fixedResult = result.replace(/\\.+$/, '.');\n        this.withEndPoint = fixedResult.indexOf('.') === fixedResult.length - 1;\n        this.decimalPart = originalValue ? result.split('.')[1] : '';\n      }\n\n      let bigNumberValue = new BigNumber(originalValue);\n\n      const errors: any = {};\n\n      let modelValue;\n\n      if (!originalValue || bigNumberValue.isNaN()) {\n        this.latestValue = '';\n        if (originalValue) {\n          errors.pattern = true;\n        } else if (this.required) {\n          errors.required = true;\n        }\n        modelValue = '';\n      } else {\n        if (this.decimalPart && this.decimalPart.length > this.currentDecimals) {\n          bigNumberValue = bigNumberValue.dp(this.currentDecimals);\n        }\n\n        modelValue = bigNumberValue.times(Math.pow(10, this.currentDecimals));\n\n        if (bigNumberValue.div(Math.pow(2, 256) - 1).toNumber() > 1) {\n          errors.totalMaximum = true;\n        }\n\n        if (modelValue.minus(this.appBigNumber.min).toNumber() = 0) {\n          modelValue = new BigNumber(this.appBigNumber.max);\n          originalValue = modelValue\n            .div(Math.pow(10, this.currentDecimals))\n            .toString()\n            .replace(/\\.([0-9]+)[0]+$/, '$1');\n          this.decimalPart = originalValue.split('.')[1];\n        }\n      }\n\n      modelValue = modelValue.toString(10);\n      if (JSON.stringify(errors) === '{}') {\n        this.latestValue = originalValue;\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(null);\n      } else {\n        if (this.latestValue) {\n          modelValue = new BigNumber(this.latestValue).times(Math.pow(10, this.currentDecimals)).toString();\n        }\n        if (modelValue) {\n          this.control.control.markAsTouched();\n        }\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(errors);\n      }\n    });\n  }\n\n  private maskValue(value) {\n    const visibleValue = this.latestValue ? new BigNumber(this.latestValue) : value ? new BigNumber(value).div(Math.pow(10, this.currentDecimals)) : '';\n\n    return visibleValue ? visibleValue.toFormat(Math.min(this.decimalPart ? this.decimalPart.length : 0, this.currentDecimals || 0), 1, { groupSeparator: ',', groupSize: 3, decimalSeparator: '.' }).toString() + (this.withEndPoint ? '.' : '') : '';\n  }\n}\n\n@Pipe({ name: 'bigNumberFormat' })\nexport class BigNumberFormat implements PipeTransform {\n  transform(value, decimals, format, asBN, round) {\n    const formatNumberParams = {\n      groupSeparator: ',',\n      groupSize: 3,\n      decimalSeparator: '.',\n    };\n\n    const bigNumberValue = new BigNumber(value).div(Math.pow(10, decimals));\n\n    if (bigNumberValue.isNaN()) {\n      return value;\n    }\n\n    if (format) {\n      return round || decimals || decimals === 0 ? bigNumberValue.dp(round || decimals).toFormat(formatNumberParams) : '';\n    } else if (!asBN) {\n      return bigNumberValue.toString(10);\n    } else {\n      return bigNumberValue;\n    }\n  }\n}\n\n@Pipe({ name: 'bigNumberMin' })\nexport class BigNumberMin implements PipeTransform {\n  transform(values) {\n    return BigNumber.min.apply(null, values);\n  }\n}\n@Pipe({ name: 'bigNumberMax' })\nexport class BigNumberMax implements PipeTransform {\n  transform(values) {\n    return BigNumber.max.apply(null, values);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BigNumberMax.html":{"url":"pipes/BigNumberMax.html","title":"pipe - BigNumberMax","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BigNumberMax\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/directives/bignumber/bignumber.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bigNumberMax\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(values)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/bignumber/bignumber.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Directive, Injector, Input, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport BigNumber from 'bignumber.js';\nimport { Console } from 'console';\n\n@Directive({\n  selector: '[appBigNumber]',\n})\nexport class BigNumberDirective implements OnInit {\n  private control: NgControl;\n  private latestValue;\n  private decimalPart;\n  private oldDecimal;\n\n  private currentDecimals: number;\n\n  private withEndPoint;\n\n  @Input('appBigNumber') appBigNumber;\n  @Input('ngModel') ngModel;\n\n  @Input('minValueChange') minValueChange;\n  @Input('maxValueChange') maxValueChange;\n  @Input('decimalsChange') decimalsChange;\n\n  @Input('required') required;\n\n  constructor(private injector: Injector) {\n    this.control = this.injector.get(NgControl);\n  }\n\n  ngOnInit() {\n    const originalWriteVal = this.control.valueAccessor.writeValue.bind(this.control.valueAccessor);\n    this.control.valueAccessor.writeValue = (value) => originalWriteVal(this.maskValue(value));\n\n    this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n\n    const checkValue = () => {\n      this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n      setTimeout(() => {\n        this.control.control.setValue(this.latestValue);\n      });\n    };\n\n    if (this.minValueChange) {\n      this.minValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.maxValueChange) {\n      this.maxValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.decimalsChange) {\n      this.decimalsChange.subscribe(() => {\n        checkValue();\n      });\n    }\n\n    this.control.valueChanges.subscribe((result: string) => {\n      result = result || '';\n\n      let originalValue = result.split(',').join('').replace(/\\.$/, '');\n\n      if (new BigNumber(originalValue).isNaN()) {\n        originalValue = result !== '' ? this.latestValue : '';\n      } else {\n        const fixedResult = result.replace(/\\.+$/, '.');\n        this.withEndPoint = fixedResult.indexOf('.') === fixedResult.length - 1;\n        this.decimalPart = originalValue ? result.split('.')[1] : '';\n      }\n\n      let bigNumberValue = new BigNumber(originalValue);\n\n      const errors: any = {};\n\n      let modelValue;\n\n      if (!originalValue || bigNumberValue.isNaN()) {\n        this.latestValue = '';\n        if (originalValue) {\n          errors.pattern = true;\n        } else if (this.required) {\n          errors.required = true;\n        }\n        modelValue = '';\n      } else {\n        if (this.decimalPart && this.decimalPart.length > this.currentDecimals) {\n          bigNumberValue = bigNumberValue.dp(this.currentDecimals);\n        }\n\n        modelValue = bigNumberValue.times(Math.pow(10, this.currentDecimals));\n\n        if (bigNumberValue.div(Math.pow(2, 256) - 1).toNumber() > 1) {\n          errors.totalMaximum = true;\n        }\n\n        if (modelValue.minus(this.appBigNumber.min).toNumber() = 0) {\n          modelValue = new BigNumber(this.appBigNumber.max);\n          originalValue = modelValue\n            .div(Math.pow(10, this.currentDecimals))\n            .toString()\n            .replace(/\\.([0-9]+)[0]+$/, '$1');\n          this.decimalPart = originalValue.split('.')[1];\n        }\n      }\n\n      modelValue = modelValue.toString(10);\n      if (JSON.stringify(errors) === '{}') {\n        this.latestValue = originalValue;\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(null);\n      } else {\n        if (this.latestValue) {\n          modelValue = new BigNumber(this.latestValue).times(Math.pow(10, this.currentDecimals)).toString();\n        }\n        if (modelValue) {\n          this.control.control.markAsTouched();\n        }\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(errors);\n      }\n    });\n  }\n\n  private maskValue(value) {\n    const visibleValue = this.latestValue ? new BigNumber(this.latestValue) : value ? new BigNumber(value).div(Math.pow(10, this.currentDecimals)) : '';\n\n    return visibleValue ? visibleValue.toFormat(Math.min(this.decimalPart ? this.decimalPart.length : 0, this.currentDecimals || 0), 1, { groupSeparator: ',', groupSize: 3, decimalSeparator: '.' }).toString() + (this.withEndPoint ? '.' : '') : '';\n  }\n}\n\n@Pipe({ name: 'bigNumberFormat' })\nexport class BigNumberFormat implements PipeTransform {\n  transform(value, decimals, format, asBN, round) {\n    const formatNumberParams = {\n      groupSeparator: ',',\n      groupSize: 3,\n      decimalSeparator: '.',\n    };\n\n    const bigNumberValue = new BigNumber(value).div(Math.pow(10, decimals));\n\n    if (bigNumberValue.isNaN()) {\n      return value;\n    }\n\n    if (format) {\n      return round || decimals || decimals === 0 ? bigNumberValue.dp(round || decimals).toFormat(formatNumberParams) : '';\n    } else if (!asBN) {\n      return bigNumberValue.toString(10);\n    } else {\n      return bigNumberValue;\n    }\n  }\n}\n\n@Pipe({ name: 'bigNumberMin' })\nexport class BigNumberMin implements PipeTransform {\n  transform(values) {\n    return BigNumber.min.apply(null, values);\n  }\n}\n@Pipe({ name: 'bigNumberMax' })\nexport class BigNumberMax implements PipeTransform {\n  transform(values) {\n    return BigNumber.max.apply(null, values);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BigNumberMin.html":{"url":"pipes/BigNumberMin.html","title":"pipe - BigNumberMin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BigNumberMin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/directives/bignumber/bignumber.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bigNumberMin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(values)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/bignumber/bignumber.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Directive, Injector, Input, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport BigNumber from 'bignumber.js';\nimport { Console } from 'console';\n\n@Directive({\n  selector: '[appBigNumber]',\n})\nexport class BigNumberDirective implements OnInit {\n  private control: NgControl;\n  private latestValue;\n  private decimalPart;\n  private oldDecimal;\n\n  private currentDecimals: number;\n\n  private withEndPoint;\n\n  @Input('appBigNumber') appBigNumber;\n  @Input('ngModel') ngModel;\n\n  @Input('minValueChange') minValueChange;\n  @Input('maxValueChange') maxValueChange;\n  @Input('decimalsChange') decimalsChange;\n\n  @Input('required') required;\n\n  constructor(private injector: Injector) {\n    this.control = this.injector.get(NgControl);\n  }\n\n  ngOnInit() {\n    const originalWriteVal = this.control.valueAccessor.writeValue.bind(this.control.valueAccessor);\n    this.control.valueAccessor.writeValue = (value) => originalWriteVal(this.maskValue(value));\n\n    this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n\n    const checkValue = () => {\n      this.currentDecimals = !isNaN(this.appBigNumber.decimals) ? parseInt(this.appBigNumber.decimals, 10) : 0;\n      setTimeout(() => {\n        this.control.control.setValue(this.latestValue);\n      });\n    };\n\n    if (this.minValueChange) {\n      this.minValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.maxValueChange) {\n      this.maxValueChange.subscribe(() => {\n        checkValue();\n      });\n    }\n    if (this.decimalsChange) {\n      this.decimalsChange.subscribe(() => {\n        checkValue();\n      });\n    }\n\n    this.control.valueChanges.subscribe((result: string) => {\n      result = result || '';\n\n      let originalValue = result.split(',').join('').replace(/\\.$/, '');\n\n      if (new BigNumber(originalValue).isNaN()) {\n        originalValue = result !== '' ? this.latestValue : '';\n      } else {\n        const fixedResult = result.replace(/\\.+$/, '.');\n        this.withEndPoint = fixedResult.indexOf('.') === fixedResult.length - 1;\n        this.decimalPart = originalValue ? result.split('.')[1] : '';\n      }\n\n      let bigNumberValue = new BigNumber(originalValue);\n\n      const errors: any = {};\n\n      let modelValue;\n\n      if (!originalValue || bigNumberValue.isNaN()) {\n        this.latestValue = '';\n        if (originalValue) {\n          errors.pattern = true;\n        } else if (this.required) {\n          errors.required = true;\n        }\n        modelValue = '';\n      } else {\n        if (this.decimalPart && this.decimalPart.length > this.currentDecimals) {\n          bigNumberValue = bigNumberValue.dp(this.currentDecimals);\n        }\n\n        modelValue = bigNumberValue.times(Math.pow(10, this.currentDecimals));\n\n        if (bigNumberValue.div(Math.pow(2, 256) - 1).toNumber() > 1) {\n          errors.totalMaximum = true;\n        }\n\n        if (modelValue.minus(this.appBigNumber.min).toNumber() = 0) {\n          modelValue = new BigNumber(this.appBigNumber.max);\n          originalValue = modelValue\n            .div(Math.pow(10, this.currentDecimals))\n            .toString()\n            .replace(/\\.([0-9]+)[0]+$/, '$1');\n          this.decimalPart = originalValue.split('.')[1];\n        }\n      }\n\n      modelValue = modelValue.toString(10);\n      if (JSON.stringify(errors) === '{}') {\n        this.latestValue = originalValue;\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(null);\n      } else {\n        if (this.latestValue) {\n          modelValue = new BigNumber(this.latestValue).times(Math.pow(10, this.currentDecimals)).toString();\n        }\n        if (modelValue) {\n          this.control.control.markAsTouched();\n        }\n        this.control.control.setValue(modelValue, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(errors);\n      }\n    });\n  }\n\n  private maskValue(value) {\n    const visibleValue = this.latestValue ? new BigNumber(this.latestValue) : value ? new BigNumber(value).div(Math.pow(10, this.currentDecimals)) : '';\n\n    return visibleValue ? visibleValue.toFormat(Math.min(this.decimalPart ? this.decimalPart.length : 0, this.currentDecimals || 0), 1, { groupSeparator: ',', groupSize: 3, decimalSeparator: '.' }).toString() + (this.withEndPoint ? '.' : '') : '';\n  }\n}\n\n@Pipe({ name: 'bigNumberFormat' })\nexport class BigNumberFormat implements PipeTransform {\n  transform(value, decimals, format, asBN, round) {\n    const formatNumberParams = {\n      groupSeparator: ',',\n      groupSize: 3,\n      decimalSeparator: '.',\n    };\n\n    const bigNumberValue = new BigNumber(value).div(Math.pow(10, decimals));\n\n    if (bigNumberValue.isNaN()) {\n      return value;\n    }\n\n    if (format) {\n      return round || decimals || decimals === 0 ? bigNumberValue.dp(round || decimals).toFormat(formatNumberParams) : '';\n    } else if (!asBN) {\n      return bigNumberValue.toString(10);\n    } else {\n      return bigNumberValue;\n    }\n  }\n}\n\n@Pipe({ name: 'bigNumberMin' })\nexport class BigNumberMin implements PipeTransform {\n  transform(values) {\n    return BigNumber.min.apply(null, values);\n  }\n}\n@Pipe({ name: 'bigNumberMax' })\nexport class BigNumberMax implements PipeTransform {\n  transform(values) {\n    return BigNumber.max.apply(null, values);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CalculatePipe.html":{"url":"pipes/CalculatePipe.html","title":"pipe - CalculatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CalculatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/service/calculate/calculate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        calculate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/calculate/calculate.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { CalculateService } from './calculate.service';\n\n@Pipe({\n  name: 'calculate',\n})\nexport class CalculatePipe implements PipeTransform {\n  transform(value: number, args?: any): string {\n    // return CalculateService.getFloatWithSuffix(value, 1);\n    return CalculateService.getSmallFloatWithSuffix(value, 1);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalculateService.html":{"url":"injectables/CalculateService.html","title":"injectable - CalculateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CalculateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/calculate/calculate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getFloatWithSuffix\n                            \n                            \n                                    Static\n                                getIntegerWithSuffix\n                            \n                            \n                                    Static\n                                getSmallFloatWithSuffix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getFloatWithSuffix\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFloatWithSuffix(value: number, fixed: number, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/calculate/calculate.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getIntegerWithSuffix\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIntegerWithSuffix(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/calculate/calculate.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getSmallFloatWithSuffix\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSmallFloatWithSuffix(value: number, fixed: number, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/calculate/calculate.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fixed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CalculateService {\n  public static getIntegerWithSuffix(value: number): string {\n    return CalculateService.getFloatWithSuffix(value, 0);\n  }\n\n  public static getFloatWithSuffix(value: number, fixed: number, type?: string): string {\n    const originalValue = value;\n    const suffixesTemplate = { short: ['', 'K', 'M', 'B'], full: ['', ' thousand', ' million', ' billion'] };\n    const suffixes = suffixesTemplate[type || 'short'];\n    let iterations = 0;\n    while (value) {\n      value = Math.floor(value / 1000);\n      if (value) {\n        iterations++;\n      }\n    }\n    return (originalValue / Math.pow(1000, iterations)).toFixed(fixed) + suffixes[iterations];\n  }\n\n  public static getSmallFloatWithSuffix(value: number, fixed = 1, type?: string): string {\n    if (value \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/contract/contract.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        net\n                                \n                                \n                                        network\n                                \n                                \n                                        production\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        net\n                                    \n                                \n                                \n                                    \n                                        net:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        network\n                                    \n                                \n                                \n                                    \n                                        network:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport BigNumber from 'bignumber.js';\nimport { Contract } from 'web3-eth-contract';\n\nimport { MetamaskService } from '../metamask/metamask.service';\nimport { AppConfig } from '../appconfig';\n\ninterface Config {\n  production: boolean;\n  network: string;\n  net: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContractService {\n  private metaMaskWeb3: any;\n  public account: any;\n  private allAccountSubscribers = [];\n  private allTransactionSubscribers = [];\n\n  public avsAddress: string;\n\n  private TokenContract: Contract;\n  private tokenAddress: string;\n\n  private StakingContract: Contract;\n  public stakingAddress: string;\n  private CONTRACTS_PARAMS: any;\n\n  public settingsApp = {\n    production: false,\n    network: 'ropsten',\n    net: 3,\n  };\n\n  constructor(private httpService: HttpClient, private config: AppConfig) {}\n\n  /**\n   * Main Site Information\n   * @description Get main information for site from contract.\n   * @example\n   * contractService.getMainInfo().then((info) => {console.log('info',info);});\n   * @returns info:{totalAvs,totalStakedAVS,totalStakers,balance}\n   */\n  public async getMainInfo(): Promise {\n    const promises = [\n      this.getTotalAvs().then((value) => {\n        return {\n          key: 'totalAvs',\n          value,\n        };\n      }),\n      this.getTotalStakedAVS().then((value) => {\n        return {\n          key: 'totalStakedAVS',\n          value,\n        };\n      }),\n      this.getTotalStakers().then((value) => {\n        return {\n          key: 'totalStakers',\n          value,\n        };\n      }),\n      this.getTokenBalance().then((value) => {\n        return {\n          key: 'balance',\n          value,\n        };\n      }),\n      // this.getSevenDays().then((value) => {\n      //   return {\n      //     key: 'sevenDays',\n      //     value,\n      //   };\n      // }),\n    ];\n\n    return Promise.all(promises).then((results) => {\n      const values = {};\n      results.forEach((v) => {\n        values[v.key] = v.value;\n      });\n      return values;\n    });\n  }\n\n  /**\n   * Get Total AVS (Coin)\n   * @description Get information about total AVS coins on contract.\n   * @example\n   * contractService.getTotalAvs().then((totalAvs) => {console.log('totalAvs',totalAvs);});\n   * @returns totalAvs: number\n   */\n  public getTotalAvs(): Promise {\n    return this.TokenContract.methods\n      .totalSupply()\n      .call()\n      .then(\n        (value: any) => {\n          return value;\n        },\n        (err: any) => {\n          console.log('getTotalAvs', err);\n        }\n      );\n  }\n\n  /**\n   * Get Total Staked AVS (Coin)\n   * @description Get information about total staked coins on contract.\n   * @example\n   * contractService.totalStakedAVS().then((totalStakedAVS) => {console.log('totalStakedAVS',totalStakedAVS);});\n   * @returns totalStakedAVS: number\n   */\n  public getTotalStakedAVS(): Promise {\n    return this.StakingContract.methods\n      .totalStakedAVS()\n      .call()\n      .then(\n        (value: any) => {\n          return value;\n        },\n        (err: any) => {\n          console.log('getTotalStakedAVS', err);\n        }\n      );\n  }\n\n  /**\n   * Get Total Stakers\n   * @description Get information about total contract stakers.\n   * @example\n   * contractService.totalStakers().then((totalStakers) => {console.log('totalStakers',totalStakers);});\n   * @returns totalStakers: number\n   */\n  public getTotalStakers(): Promise {\n    return this.StakingContract.methods\n      .totalStakers()\n      .call()\n      .then(\n        (value: any) => {\n          return value;\n        },\n        (err: any) => {\n          console.log('getTotalStakers', err);\n        }\n      );\n  }\n\n  /**\n   * Get Seven Days Info\n   * @description Get information about percent avarage staking.\n   * @example\n   * contractService.getSevenDays().then((percent) => {console.log('percent',percent);});\n   * @returns percent: number\n   */\n  public async getSevenDays(): Promise {\n    return this.StakingContract.methods\n      .seven_days()\n      .call()\n      .then(\n        (res: any) => {\n          return res;\n        },\n        (err: any) => {\n          console.log('getSevenDays', err);\n        }\n      );\n  }\n\n  /**\n   * Get Contract Timestamp\n   * @description Get timestamp from contract.\n   * @example\n   * contractService.getTimeStampFromContract().then((time) => {console.log('time',time);});\n   * @returns time: number\n   */\n  public async getTimeStampFromContract(date: number): Promise {\n    return this.StakingContract.methods\n      .getDayUnixTime(date)\n      .call()\n      .then((endDay: number) => {\n        return endDay * 1000;\n      });\n  }\n\n  /**\n   * Get Account Stakes\n   * @description Get collection of account stakes from contract.\n   * @example\n   * contractService.getAccountStakes().then((stakes) => {console.log('stakes',stakes);});\n   * @returns stakes[]:{index: number,id: number,start: number,end: number,stakedAVS: number,totalReward: number,withdrawProgress: boolean,};\n   */\n  public async getAccountStakes(): Promise {\n    return this.StakingContract.methods\n      .stakeListCount(this.account.address)\n      .call()\n      .then((sessions: any) => {\n        if (sessions !== '0' && sessions !== 0) {\n          const sessionsIds = [];\n          for (let i = 0; i  {\n            return this.StakingContract.methods\n              .stakeList(this.account.address, sessionId)\n              .call()\n              .then((oneSession) => {\n                const promises = [this.getTimeStampFromContract(oneSession.startDay), this.getTimeStampFromContract(oneSession.startDay + oneSession.numDaysStake)];\n\n                return Promise.all(promises).then((stake) => {\n                  return {\n                    index: sessionId,\n                    id: oneSession.stakeId,\n                    start: stake[0],\n                    end: stake[1],\n                    stakedAVS: oneSession.stakedAVS,\n                    totalReward: oneSession.freezedRewardAVSTokens,\n                    withdrawProgress: false,\n                  };\n                });\n              });\n          });\n          return Promise.all(sessionsPromises).then((allDeposits) => {\n            console.log(allDeposits);\n            return allDeposits.reverse();\n          });\n        } else {\n          const promises = [true];\n          return Promise.all(promises).then(() => {\n            return 0;\n          });\n        }\n      });\n  }\n\n  /**\n   * Check Allowance\n   * @description Check if address accept spend amount of coins to contract.\n   * @example\n   * contractService.getAllowance(amount).then(() => {},() => {});\n   * @returns true | false\n   */\n  private getAllowance(amount: string | number): Promise {\n    return new Promise((resolve, reject) => {\n      this.TokenContract.methods\n        .allowance(this.account.address, this.stakingAddress)\n        .call()\n        .then((allowance: string) => {\n          const allow = new BigNumber(allowance);\n          const allowed = allow.minus(amount);\n          allowed.isNegative() ? reject() : resolve(1);\n        });\n    });\n  }\n\n  /**\n   * Start Stake\n   * @description Send coins to staking on contract.\n   * @example\n   * contractService.startStake(amount, day).then(() => {}).catch((err)=>{});\n   * @returns true | false\n   */\n  public startStake(amount: string | number, day: number): Promise {\n    const fromAccount = this.account.address;\n\n    const stake = (resolve, reject) => {\n      return this.StakingContract.methods\n        .stakeStart(amount, day)\n        .send({\n          from: fromAccount,\n        })\n        .then((res) => {\n          return this.checkTransaction(res);\n        })\n        .then(resolve, reject);\n    };\n\n    return new Promise((resolve, reject) => {\n      this.getAllowance(amount).then(\n        () => {\n          stake(resolve, reject);\n        },\n        () => {\n          this.TokenContract.methods\n            .approve(this.stakingAddress, amount)\n            .send({\n              from: fromAccount,\n            })\n            .then(() => {\n              stake(resolve, reject);\n            }, reject);\n        }\n      );\n    });\n  }\n\n  /**\n   * Unstake\n   * @description Retrive coins from staking.\n   * @example\n   * contractService.unstake(sessionId,id).then(()=>{console.log('complete');}).catch(() => {console.log('error');});\n   * @returns true | false\n   */\n  public async unstake(sessionId: number, id: number): Promise {\n    return this.StakingContract.methods\n      .stakeEnd(sessionId, id)\n      .send({\n        from: this.account.address,\n      })\n      .then((res: any) => {\n        return this.checkTransaction(res);\n      });\n  }\n\n  /**\n   * Token Balance\n   * @description Get token contract balance on eth metamask address.\n   * @example\n   * contractService.getTokenBalance(address).then((balance)=>{console.log('balance',balance)});\n   * @returns balance: string | number\n   */\n  public async getTokenBalance(address?: string): Promise {\n    return this.TokenContract.methods\n      .balanceOf(address ? address : this.account.address)\n      .call()\n      .then((balance: string | number) => {\n        return balance;\n      });\n  }\n\n  /**\n   * Check Transaction\n   * @description Checking transaction in blockchain.\n   * @example\n   * new Promise((resolve, reject) => {contractService.checkTx(tx, resolve, reject);});\n   */\n  private checkTx(tx: any, resolve: any, reject: any): void {\n    this.metaMaskWeb3.Web3.eth.getTransaction(tx.transactionHash).then((txInfo) => {\n      if (txInfo.blockNumber) {\n        this.callAllTransactionsSubscribers(txInfo);\n        resolve(tx);\n      } else {\n        setTimeout(() => {\n          this.checkTx(tx, resolve, reject);\n        }, 2000);\n      }\n    }, reject);\n  }\n\n  /**\n   * Check All Transaction Subscribers\n   * @description Trigger observer subscribers if transaction complete.\n   * @example\n   * contractService.callAllTransactionsSubscribers(txInfo);\n   */\n  private callAllTransactionsSubscribers(transaction: string): void {\n    this.allTransactionSubscribers.forEach((observer) => {\n      observer.next(transaction);\n    });\n  }\n\n  /**\n   * Check Transaction\n   * @description Start checking transaction.\n   * @example\n   * contractService.checkTransaction(tx);\n   * @returns value from checkTx() function\n   */\n  private checkTransaction(tx: string): Promise {\n    return new Promise((resolve, reject) => {\n      this.checkTx(tx, resolve, reject);\n    });\n  }\n\n  /**\n   * Transaction Subscribe\n   * @description Create new Observer of transactions which will add it to allTransactionSubscribers variable and return information transaction failed or successed.\n   * @example\n   * contractService.transactionsSubscribe().subscribe((transaction) => {console.log('success', transaction)});\n   * @returns transaction: {tx: string}\n   */\n  public transactionsSubscribe(): Observable {\n    const newObserver = new Observable((observer) => {\n      this.allTransactionSubscribers.push(observer);\n    });\n    return newObserver;\n  }\n\n  /**\n   * Static information\n   * @description Main initialized function which will initialized MetaMaskService, retrive account information and triggered getContractsInfo() function.\n   * @example\n   * contractService.getStaticInfo().then(() => {}).catch((err)=>{});\n   * @returns true\n   */\n  public async getStaticInfo(): Promise {\n    return this.initAll().then(() => {\n      this.metaMaskWeb3 = new MetamaskService(this.config);\n      this.metaMaskWeb3.getAccounts().subscribe((account: any) => {\n        if (account) {\n          const promises = [this.getContractsInfo(false)];\n          return Promise.all(promises);\n        }\n      });\n    });\n  }\n\n  /**\n   * Get contract information.\n   * @description Triggered initializeContracts() function than will add contracts abi and address to metamask configuration.\n   * @example\n   * contractService.getContractsInfo(false).then(() => {});\n   * @returns true\n   */\n  private getContractsInfo(noEnable?: boolean): Promise {\n    if (!noEnable) {\n      this.initializeContracts();\n    }\n    const promises = [true];\n    return Promise.all(promises);\n  }\n\n  /**\n   * Application initialized\n   * @description Load setting and contracrs information via https from assets/js/. Set application setting and contracts.\n   * @example\n   * contractService.initAll().then(() => {});\n   */\n  private async initAll(): Promise {\n    const promises = [\n      this.httpService\n        .get(`/assets/js/settings.json?v=${new Date().getTime()}`)\n        .toPromise()\n        .then((config: Config) => {\n          this.settingsApp = config ? config : this.settingsApp;\n          this.config.setConfig(this.settingsApp);\n        })\n        .catch(() => {\n          this.config.setConfig(this.settingsApp);\n        }),\n      this.httpService\n        .get(`/assets/js/constants.json?v=${new Date().getTime()}`)\n        .toPromise()\n        .then((result) => {\n          return result;\n        })\n        .catch((err) => {\n          console.log('err constants', err);\n        }),\n    ];\n\n    return Promise.all(promises).then((result) => {\n      this.CONTRACTS_PARAMS = result[1][this.settingsApp.production ? 'mainnet' : this.settingsApp.network];\n    });\n  }\n\n  public accountSubscribe(): Observable {\n    const newObserver = new Observable((observer) => {\n      observer.next(this.account);\n      this.allAccountSubscribers.push(observer);\n      return {\n        unsubscribe: () => {\n          this.allAccountSubscribers = this.allAccountSubscribers.filter((a) => a !== newObserver);\n        },\n      };\n    });\n    return newObserver;\n  }\n\n  /**\n   * Load account information\n   * @description Triggered function callAllAccountsSubscribers.\n   * @example\n   * contractService.loadAccountInfo();\n   */\n  public loadAccountInfo(): any {\n    this.callAllAccountsSubscribers();\n  }\n\n  /**\n   * Update account balance\n   * @description Update information about account token balance.\n   * @example\n   * contractService.updateBalance();\n   */\n  public updateBalance(): void {\n    this.getTokenBalance().then((balance) => {\n      this.account.balance = balance;\n      this.callAllAccountsSubscribers();\n    });\n  }\n\n  /**\n   * All Account Subscribers\n   * @description Send new account value to all account subscribers.\n   * @example\n   * contractService.callAllAccountsSubscribers();\n   */\n  private callAllAccountsSubscribers(): void {\n    this.allAccountSubscribers.forEach((observer) => {\n      observer.next(this.account);\n    });\n  }\n\n  /**\n   * Get account information.\n   * @description Retrive infromation about account address via MetaMaskService from blockchain by address and get token address balance.\n   * @example\n   * contractService.getAccount().then((account) => { console.log(account); }).catch((err) => { console.log(err); });\n   * @returns account: {address: string, balance: string | number}\n   */\n  public getAccount(noEnable?: boolean): Promise {\n    return new Promise((resolve, reject) => {\n      this.metaMaskWeb3.getAccounts(noEnable).subscribe(\n        (account: any) => {\n          if (!this.account || account.address !== this.account.address) {\n            this.account = account;\n            this.getTokenBalance(account.address)\n              .then((balance) => {\n                this.account.balance = balance;\n                resolve(this.account);\n              })\n              .catch((err) => {\n                console.log('getTokenBalance', err);\n              });\n          }\n        },\n        (err) => {\n          this.account = false;\n          reject(err);\n        }\n      );\n    });\n  }\n\n  /**\n   * Getting Token Address\n   * @description Return adress of token contract.\n   * @example\n   * contractService.getContractTokenAddress();\n   * @returns address\n   */\n  public getContractTokenAddress(): string {\n    return this.tokenAddress;\n  }\n\n  /**\n   * Getting Token Address\n   * @description Return adress of token contract.\n   * @example\n   * contractService.getContractTokenAddress();\n   * @returns address\n   */\n  public getStakingAddress(): string {\n    return this.stakingAddress;\n  }\n\n  /**\n   * Initialize contracts.\n   * @description Add your variable of contract to load it\n   */\n  private initializeContracts(): void {\n    this.StakingContract = this.metaMaskWeb3.getContract(this.CONTRACTS_PARAMS.Staking.ABI, this.CONTRACTS_PARAMS.Staking.ADDRESS);\n    this.TokenContract = this.metaMaskWeb3.getContract(this.CONTRACTS_PARAMS.Token.ABI, this.CONTRACTS_PARAMS.Token.ADDRESS);\n    this.tokenAddress = this.CONTRACTS_PARAMS.Token.ADDRESS;\n    this.stakingAddress = this.CONTRACTS_PARAMS.Staking.ADDRESS;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/locale/locale.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                localeBase\n                            \n                            \n                                    Private\n                                localeCurrent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                registerCulture\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/locale/locale.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            registerCulture\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCulture(culture: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/locale/locale.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    culture\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            localeBase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'en'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/locale/locale.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            localeCurrent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/locale/locale.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/service/locale/locale.service.ts:15\n                                \n                            \n\n                \n                    \n                        setlocale(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/service/locale/locale.service.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in src/app/service/locale/locale.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  return window;\n}\n\n@Injectable()\nexport class LocaleService {\n  private localeCurrent: string;\n  private localeBase = 'en';\n\n  set locale(value: string) {\n    this.localeCurrent = value;\n  }\n  get locale(): string {\n    return this.localeCurrent || 'en-US';\n  }\n  get nativeWindow(): any {\n    return _window();\n  }\n\n  constructor() {\n    try {\n      if (\n        (this.nativeWindow.navigator.language === null ||\n          this.nativeWindow.navigator.language === undefined) &&\n        this.nativeWindow.navigator.language !== ''\n      ) {\n        this.localeBase = this.nativeWindow.navigator.language;\n      }\n    } finally {\n    }\n    this.registerCulture(this.localeBase);\n  }\n\n  public async registerCulture(culture: string): Promise {\n    if (!culture) {\n      return;\n    }\n\n    switch (culture.toLowerCase()) {\n      case 'en-us': {\n        this.localeCurrent = 'en';\n        break;\n      }\n      default: {\n        this.localeCurrent = 'en-gb';\n        break;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetamaskErrorComponent.html":{"url":"components/MetamaskErrorComponent.html","title":"component - MetamaskErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MetamaskErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/metamask/metamask-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-metamask-error\n            \n\n\n\n\n            \n                templateUrl\n                ./metamask-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                err\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/metamask/metamask-error.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/metamask/metamask-error.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/metamask/metamask-error.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/metamask/metamask-error.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            err\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/metamask/metamask-error.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/metamask/metamask-error.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-metamask-error',\n  templateUrl: './metamask-error.component.html',\n})\nexport class MetamaskErrorComponent {\n  public err: string;\n  public title: string;\n\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.err = data.msg;\n    this.title = data.title;\n  }\n  public closeModal(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n  \n  \n    \n  \n  \n    Close\n    {{ modal.button.two }} -->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}                Close    {{ modal.button.two }} -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MetamaskErrorComponent', 'selector': 'app-metamask-error'},{'name': 'TransactionSuccessModalComponent', 'selector': 'app-transaction-success-modal'}];\n    var DIRECTIVES = [{'name': 'BigNumberDirective', 'selector': '[appBigNumber]'},{'name': 'MinMaxDirective', 'selector': '[appMinMaxNumber]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetamaskErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetamaskService.html":{"url":"injectables/MetamaskService.html","title":"injectable - MetamaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MetamaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/metamask/metamask.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                metaMaskWeb3\n                            \n                            \n                                    Private\n                                net\n                            \n                            \n                                    Private\n                                netVersion\n                            \n                            \n                                    Private\n                                providers\n                            \n                            \n                                    Public\n                                Web3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAccounts\n                            \n                            \n                                    Public\n                                getBalance\n                            \n                            \n                                    Public\n                                getContract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AppConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/metamask/metamask.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAccounts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccounts(noEnable?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/metamask/metamask.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    noEnable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBalance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBalance(address)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/metamask/metamask.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getContract\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getContract(abi: Array, address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/metamask/metamask.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    abi\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            metaMaskWeb3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/metamask/metamask.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            net\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/metamask/metamask.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            netVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/metamask/metamask.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/metamask/metamask.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Web3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/metamask/metamask.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppConfig } from '../appconfig';\nimport Web3 from 'web3';\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetamaskService {\n  private metaMaskWeb3: any;\n  public Web3: any;\n  private providers: any;\n\n  private netVersion: number;\n  private net: string;\n\n  constructor(private config: AppConfig) {\n    const appConfig = this.config.getConfig();\n\n    this.netVersion = appConfig.production ? 1 : appConfig.net;\n    this.net = this.netVersion === 1 ? 'mainnet' : appConfig.network;\n\n    this.providers = {};\n    this.providers.metamask = Web3.givenProvider;\n\n    if (typeof window.ethereum !== 'undefined') {\n      this.metaMaskWeb3 = window.ethereum;\n    }\n  }\n\n  public getBalance(address): Promise {\n    return this.Web3.eth.getBalance(address);\n  }\n\n  public getContract(abi: Array, address: string): void {\n    return new this.Web3.eth.Contract(abi, address);\n  }\n\n  public getAccounts(noEnable?: boolean): Observable {\n    const onAuth = (observer: any, address: string) => {\n      if (this.Web3) {\n        this.Web3.setProvider(this.providers.metamask);\n      } else {\n        this.Web3 = new Web3(this.providers.metamask);\n      }\n      observer.next({\n        address,\n        network: this.net,\n      });\n      if (noEnable) {\n        observer.complete();\n      }\n    };\n\n    const onError = (observer, errorParams) => {\n      observer.error(errorParams);\n      if (noEnable) {\n        observer.complete();\n      }\n    };\n\n    const isValidMetaMaskNetwork = (observer, chain?) => {\n      return new Promise((resolve, reject) => {\n        this.metaMaskWeb3\n          .request({\n            method: 'net_version',\n          })\n          .then((result) => {\n            if (this.netVersion !== Number(result)) {\n              if (chain) {\n                onError(observer, {\n                  code: 3,\n                  msg: 'Not authorized',\n                  title: 'Metamask Error',\n                });\n              }\n\n              observer.error({\n                code: 2,\n                msg: 'Please choose ' + this.net + ' network in Metamask.',\n                title: 'Metamask Error',\n              });\n\n              reject();\n            }\n            resolve(true);\n          });\n      });\n    };\n\n    return new Observable((observer) => {\n      if (this.metaMaskWeb3 && this.metaMaskWeb3.isMetaMask) {\n        this.metaMaskWeb3.on('chainChanged', () => {\n          isValidMetaMaskNetwork(observer)\n            .then(() => {\n              window.location.reload();\n            })\n            .catch(() => {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            });\n        });\n\n        isValidMetaMaskNetwork(observer).then(() => {\n          this.metaMaskWeb3.on('accountsChanged', (accounts: Array) => {\n            if (accounts.length) {\n              onAuth(observer, accounts[0]);\n            } else {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            }\n          });\n\n          if (!this.metaMaskWeb3.selectedAddress && !noEnable) {\n            this.metaMaskWeb3.enable().catch(() => {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            });\n          } else {\n            if (this.metaMaskWeb3.selectedAddress) {\n              onAuth(observer, this.metaMaskWeb3.selectedAddress);\n            } else {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            }\n          }\n        });\n      } else {\n        onError(observer, {\n          code: 1,\n          msg: 'Metamask extension is not found. You can install it from metamask.io',\n          title: 'Metamask Error',\n        });\n      }\n      return {\n        unsubscribe(): any {},\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MinMaxDirective.html":{"url":"directives/MinMaxDirective.html","title":"directive - MinMaxDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MinMaxDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/minmax/minmax.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMinMaxNumber]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                control\n                            \n                            \n                                    Private\n                                latestValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appMinMaxNumber\n                            \n                            \n                                ngModel\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/minmax/minmax.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appMinMaxNumber\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/minmax/minmax.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/minmax/minmax.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/minmax/minmax.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/minmax/minmax.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/minmax/minmax.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latestValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/minmax/minmax.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Injector, Input, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appMinMaxNumber]',\n})\nexport class MinMaxDirective implements OnInit {\n  private control: NgControl;\n  private latestValue;\n\n  @Input('appMinMaxNumber') appMinMaxNumber;\n  @Input('ngModel') ngModel;\n  @Input('required') required;\n\n  constructor(private injector: Injector) {\n    this.control = this.injector.get(NgControl);\n  }\n\n  ngOnInit() {\n    const originalWriteVal = this.control.valueAccessor.writeValue.bind(this.control.valueAccessor);\n\n    this.control.valueChanges.subscribe((result: string) => {\n      result = result || '';\n\n      if (isNaN(+result)) {\n        result = result !== '' ? this.latestValue : '';\n      }\n\n      const errors: any = {};\n\n      if (!result && this.required) {\n        errors.required = true;\n      } else {\n        if (+result  this.appMinMaxNumber.max) {\n          if (!this.latestValue || this.latestValue > this.appMinMaxNumber.max) {\n            errors.max = true;\n          } else {\n            result = this.latestValue;\n          }\n        }\n      }\n\n      if (JSON.stringify(errors) === '{}') {\n        this.latestValue = result;\n        this.control.control.setValue(result, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(null);\n      } else {\n        if (result) {\n          this.control.control.markAsTouched();\n        }\n        this.control.control.setValue(result, {\n          emitEvent: false,\n        });\n        this.control.control.setErrors(errors);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/theme/theme.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                themeSubscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                callSubscribers\n                            \n                            \n                                    Public\n                                getTheme\n                            \n                            \n                                    Public\n                                setTheme\n                            \n                            \n                                    Public\n                                subscribeAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/theme/theme.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            callSubscribers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callSubscribers(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/theme/theme.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/theme/theme.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/theme/theme.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subscribeAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/theme/theme.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            themeSubscribers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/theme/theme.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private themeSubscribers = [];\n  constructor() {}\n\n  public getTheme(): string {\n    const item = localStorage.getItem('theme');\n    if (item) {\n      return item;\n    } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    } else {\n      return 'white';\n    }\n  }\n\n  public setTheme(theme: string): void {\n    localStorage.setItem('theme', theme);\n    document.documentElement.setAttribute('id', theme);\n    this.callSubscribers(theme);\n  }\n\n  private callSubscribers(theme: string): void {\n    this.themeSubscribers.forEach((obser) => {\n      obser.next(theme);\n    });\n  }\n\n  public subscribeAddress(): Observable {\n    return new Observable((observer) => {\n      this.themeSubscribers.push(observer);\n      const allSubscribers = this.themeSubscribers;\n      const th = this;\n      return {\n        unsubscribe(): void {\n          th.themeSubscribers = allSubscribers.filter((exObs) => {\n            return exObs !== observer;\n          });\n        },\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionSuccessModalComponent.html":{"url":"components/TransactionSuccessModalComponent.html","title":"component - TransactionSuccessModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransactionSuccessModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/transaction/transaction-success-modal.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-success-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./transaction-success-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfig\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                ethLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, config: AppConfig, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/transaction/transaction-success-modal.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AppConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/transaction/transaction-success-modal.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/transaction/transaction-success-modal.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/transaction/transaction-success-modal.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/transaction/transaction-success-modal.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ethLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/transaction/transaction-success-modal.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { AppConfig } from '../../service/appconfig';\n\n@Component({\n  selector: 'app-transaction-success-modal',\n  templateUrl: './transaction-success-modal.component.html',\n})\nexport class TransactionSuccessModalComponent {\n  public ethLink: string;\n  private appConfig: any;\n\n  constructor(public dialogRef: MatDialogRef, private config: AppConfig, @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.appConfig = config.getConfig();\n    this.ethLink = this.appConfig.network === 'mainnet' ? `https://etherscan.io/tx/${data.tx}` : `https://${this.appConfig.network}.etherscan.io/tx/${data.tx}`;\n  }\n  public closeModal(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ data.title }}\n  \n  \n    \n    Etherscan\n  \n  \n    Close\n    {{ modal.button.two }} -->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ data.title }}            Etherscan        Close    {{ modal.button.two }} -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MetamaskErrorComponent', 'selector': 'app-metamask-error'},{'name': 'TransactionSuccessModalComponent', 'selector': 'app-transaction-success-modal'}];\n    var DIRECTIVES = [{'name': 'BigNumberDirective', 'selector': '[appBigNumber]'},{'name': 'MinMaxDirective', 'selector': '[appMinMaxNumber]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionSuccessModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Window.html":{"url":"interfaces/Window.html","title":"interface - Window","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Window\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/metamask/metamask.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ethereum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ethereum\n                                    \n                                \n                                \n                                    \n                                        ethereum:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppConfig } from '../appconfig';\nimport Web3 from 'web3';\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetamaskService {\n  private metaMaskWeb3: any;\n  public Web3: any;\n  private providers: any;\n\n  private netVersion: number;\n  private net: string;\n\n  constructor(private config: AppConfig) {\n    const appConfig = this.config.getConfig();\n\n    this.netVersion = appConfig.production ? 1 : appConfig.net;\n    this.net = this.netVersion === 1 ? 'mainnet' : appConfig.network;\n\n    this.providers = {};\n    this.providers.metamask = Web3.givenProvider;\n\n    if (typeof window.ethereum !== 'undefined') {\n      this.metaMaskWeb3 = window.ethereum;\n    }\n  }\n\n  public getBalance(address): Promise {\n    return this.Web3.eth.getBalance(address);\n  }\n\n  public getContract(abi: Array, address: string): void {\n    return new this.Web3.eth.Contract(abi, address);\n  }\n\n  public getAccounts(noEnable?: boolean): Observable {\n    const onAuth = (observer: any, address: string) => {\n      if (this.Web3) {\n        this.Web3.setProvider(this.providers.metamask);\n      } else {\n        this.Web3 = new Web3(this.providers.metamask);\n      }\n      observer.next({\n        address,\n        network: this.net,\n      });\n      if (noEnable) {\n        observer.complete();\n      }\n    };\n\n    const onError = (observer, errorParams) => {\n      observer.error(errorParams);\n      if (noEnable) {\n        observer.complete();\n      }\n    };\n\n    const isValidMetaMaskNetwork = (observer, chain?) => {\n      return new Promise((resolve, reject) => {\n        this.metaMaskWeb3\n          .request({\n            method: 'net_version',\n          })\n          .then((result) => {\n            if (this.netVersion !== Number(result)) {\n              if (chain) {\n                onError(observer, {\n                  code: 3,\n                  msg: 'Not authorized',\n                  title: 'Metamask Error',\n                });\n              }\n\n              observer.error({\n                code: 2,\n                msg: 'Please choose ' + this.net + ' network in Metamask.',\n                title: 'Metamask Error',\n              });\n\n              reject();\n            }\n            resolve(true);\n          });\n      });\n    };\n\n    return new Observable((observer) => {\n      if (this.metaMaskWeb3 && this.metaMaskWeb3.isMetaMask) {\n        this.metaMaskWeb3.on('chainChanged', () => {\n          isValidMetaMaskNetwork(observer)\n            .then(() => {\n              window.location.reload();\n            })\n            .catch(() => {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            });\n        });\n\n        isValidMetaMaskNetwork(observer).then(() => {\n          this.metaMaskWeb3.on('accountsChanged', (accounts: Array) => {\n            if (accounts.length) {\n              onAuth(observer, accounts[0]);\n            } else {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            }\n          });\n\n          if (!this.metaMaskWeb3.selectedAddress && !noEnable) {\n            this.metaMaskWeb3.enable().catch(() => {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            });\n          } else {\n            if (this.metaMaskWeb3.selectedAddress) {\n              onAuth(observer, this.metaMaskWeb3.selectedAddress);\n            } else {\n              onError(observer, {\n                code: 3,\n                msg: 'Not authorized',\n                title: 'Metamask Error',\n              });\n            }\n          }\n        });\n      } else {\n        onError(observer, {\n          code: 1,\n          msg: 'Metamask extension is not found. You can install it from metamask.io',\n          title: 'Metamask Error',\n        });\n      }\n      return {\n        unsubscribe(): any {},\n      };\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (9/27)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            initializeApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/metamask/metamask-error.component.ts\n            \n            component\n            MetamaskErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/transaction/transaction-success-modal.component.ts\n            \n            component\n            TransactionSuccessModalComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/directives/bignumber/bignumber.ts\n            \n            directive\n            BigNumberDirective\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/directives/bignumber/bignumber.ts\n            \n            pipe\n            BigNumberFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/directives/bignumber/bignumber.ts\n            \n            pipe\n            BigNumberMax\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/directives/bignumber/bignumber.ts\n            \n            pipe\n            BigNumberMin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/directives/minmax/minmax.ts\n            \n            directive\n            MinMaxDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/appconfig.ts\n            \n            injectable\n            AppConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/calculate/calculate.pipe.ts\n            \n            pipe\n            CalculatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/calculate/calculate.service.ts\n            \n            injectable\n            CalculateService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/contract/constants.ts\n            \n            variable\n            ALL_CONTRACTS_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/contract/constants.ts\n            \n            variable\n            CONTRACTS_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/contract/constants.ts\n            \n            variable\n            IS_PRODUCTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/contract/contract.service.ts\n            \n            injectable\n            ContractService\n            \n                64 %\n                (25/39)\n            \n        \n        \n            \n                \n                src/app/service/contract/contract.service.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/locale/locale.service.ts\n            \n            injectable\n            LocaleService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/locale/locale.service.ts\n            \n            function\n            _window\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/metamask/metamask.service.ts\n            \n            injectable\n            MetamaskService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/service/metamask/metamask.service.ts\n            \n            interface\n            Window\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/service/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.2.0\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            bignumber.js : ^9.0.1\n        \n            express : ^4.16.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            web3 : ^1.3.4\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _window   (src/.../locale.service.ts)\n                        \n                        \n                            initializeApp   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/service/locale/locale.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            _window\n                        \n                        \n                    \n                \n            \n            \n                \n_window()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp(injector)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    injector\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAlgovest\nThis project was generated with Angular CLI version 10.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBigNumberDirective\n\nBigNumberDirective\n\nAppModule -->\n\nBigNumberDirective->AppModule\n\n\n\n\n\nBigNumberFormat\n\nBigNumberFormat\n\nAppModule -->\n\nBigNumberFormat->AppModule\n\n\n\n\n\nBigNumberMax\n\nBigNumberMax\n\nAppModule -->\n\nBigNumberMax->AppModule\n\n\n\n\n\nBigNumberMin\n\nBigNumberMin\n\nAppModule -->\n\nBigNumberMin->AppModule\n\n\n\n\n\nCalculatePipe\n\nCalculatePipe\n\nAppModule -->\n\nCalculatePipe->AppModule\n\n\n\n\n\nMetamaskErrorComponent\n\nMetamaskErrorComponent\n\nAppModule -->\n\nMetamaskErrorComponent->AppModule\n\n\n\n\n\nTransactionSuccessModalComponent\n\nTransactionSuccessModalComponent\n\nAppModule -->\n\nTransactionSuccessModalComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppConfig\n\nAppConfig\n\nAppModule -->\n\nAppConfig->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
